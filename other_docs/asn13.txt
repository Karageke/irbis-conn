
   Z39.50 International Standard Maintenance Agency - Library of
   Congress, Network Development and MARC Standards Office
   
                                Z39.50 Text
                                      
                             Consolidated ASN.1
     _________________________________________________________________
   
   For types defined by Z39.50, this file contains a link from each
   type-reference to the type-definition. For the definitions of types
   referred to but not defined here, see ISO 8824 -- Information
   Processing Systems - Open Systems Interconnection - Specification of
   Abstract Syntax Notation One (ASN.1) 1990.
     _________________________________________________________________
   
Z39-50-APDU-1995 
   -- OID for this definition, assigned in OID.3.1, is {Z39-50 2 1} 

DEFINITIONS ::=  
BEGIN   -- Z39.50-1995 Maintenance Agency Official Text for ANSI/NISO Z39.50-19
95 - July
1995
--
EXPORTS [1]OtherInformation, [2]Term,
[3]AttributeSetId, [4]AttributeList,
[5]AttributeElement, [6]ElementSetName, [7]SortElement, [8]DatabaseName, [9]Com
pSpec,
[10]Specification, [11]Permissions, [12]InternationalString, [13]IntUnit, [14]U
nit,
[15]StringOrNumeric, [16]Query, [17]Records, [18]ResultSetId, [19]DefaultDiagFo
rmat, [20]DiagRec;
--
PDU ::= CHOICE{
 initRequest                       [20] IMPLICIT [21]InitializeRequest,
 initResponse                      [21] IMPLICIT [22]InitializeResponse,
 searchRequest                     [22] IMPLICIT [23]SearchRequest,
 searchResponse                    [23] IMPLICIT [24]SearchResponse,
 presentRequest                    [24] IMPLICIT [25]PresentRequest,
 presentResponse                   [25] IMPLICIT [26]PresentResponse,
 deleteResultSetRequest            [26] IMPLICIT [27]DeleteResultSetRequest,
 deleteResultSetResponse           [27] IMPLICIT [28]DeleteResultSetResponse,
 accessControlRequest              [28] IMPLICIT [29]AccessControlRequest,
 accessControlResponse             [29] IMPLICIT [30]AccessControlResponse,
 resourceControlRequest            [30] IMPLICIT [31]ResourceControlRequest,
 resourceControlResponse           [31] IMPLICIT [32]ResourceControlResponse,
 triggerResourceControlRequest     [32] IMPLICIT [33]TriggerResourceControlRequ
est,
 resourceReportRequest             [33] IMPLICIT [34]ResourceReportRequest,
 resourceReportResponse            [34] IMPLICIT [35]ResourceReportResponse,
 scanRequest                       [35] IMPLICIT [36]ScanRequest,
 scanResponse                      [36] IMPLICIT [37]ScanResponse,
                                       -- [37] through [42] reserved
 sortRequest                       [43] IMPLICIT [38]SortRequest,
 sortResponse                      [44] IMPLICIT [39]SortResponse,
 segmentRequest                    [45] IMPLICIT [40]Segment,
 extendedServicesRequest           [46] IMPLICIT [41]ExtendedServicesRequest,
 extendedServicesResponse          [47] IMPLICIT [42]ExtendedServicesResponse,
 close                             [48] IMPLICIT [43]Close}

-- Initialize APDUs
--

  InitializeRequest ::= SEQUENCE{
   referenceId                     [44]ReferenceId OPTIONAL,
   protocolVersion                 [45]ProtocolVersion,
   options                         [46]Options,
   preferredMessageSize      [5]   IMPLICIT INTEGER,
   exceptionalRecordSize     [6]   IMPLICIT INTEGER,
   idAuthentication          [7]   ANY OPTIONAL, -- see note below
   implementationId          [110] IMPLICIT [47]InternationalString OPTIONAL,
   implementationName        [111] IMPLICIT [48]InternationalString OPTIONAL,
   implementationVersion     [112] IMPLICIT [49]InternationalString OPTIONAL,

   userInformationField      [11]  EXTERNAL OPTIONAL,
   otherInfo                       [50]OtherInformation OPTIONAL}
--Note:
-- For idAuthentication, the type ANY is retained
-- for compatibility with earlier versions.
-- For interoperability, the following is recommended:
--   IdAuthentication [7] CHOICE{
--      open    VisibleString,
--      idPass  SEQUENCE {
--                 groupId   [0]   IMPLICIT [51]InternationalString
OPTIONAL,
--                 userId    [1]   IMPLICIT [52]InternationalString
OPTIONAL,
--                 password  [2]   IMPLICIT [53]InternationalString
OPTIONAL },
--      anonymous                  NULL,
--      other                      EXTERNAL
-- May use access control formats for 'other'.  See Appendix 7 ACC.
--
  InitializeResponse ::= SEQUENCE{
   referenceId                     [54]ReferenceId OPTIONAL,
   protocolVersion                 [55]ProtocolVersion,
   options                         [56]Options,
   preferredMessageSize      [5]   IMPLICIT INTEGER,
   exceptionalRecordSize     [6]   IMPLICIT INTEGER,
   result                    [12]  IMPLICIT BOOLEAN,
                                    -- relect = FALSE; Accept = TRUE
   implementationId          [110] IMPLICIT [57]InternationalString OPTIONAL,
   implementationName        [111] IMPLICIT [58]InternationalString OPTIONAL,
   implementationVersion     [112] IMPLICIT [59]InternationalString OPTIONAL,

   userInformationField      [11]  EXTERNAL OPTIONAL,
   otherInfo                       [60]OtherInformation OPTIONAL}
-- Begin auxiliary definitions for Init PDUs
  ProtocolVersion  ::=       [3]   IMPLICIT BIT STRING{
                                   version-1           (0),
                                -- This bit should always be set, but does not
                                -- correspond to any Z39.50 version.
      version-2              (1),
                                -- "Version 2 supported."
                                -- This bit should always be set.
      version-3              (2)
                                -- "Version 3 supported."
-- Values higher than 'version-3' should be ignored. Both the Initialize
-- request and Initialize Response APDUs include a value string corresponding
-- to the supported versions. The highest common version is selected
-- for use. If there are no versions in common, "Result" in the Init Response
-- should indicate "reject."
-- Note: Versions 1 and 2 are identical. Systems supporting version 2 should
-- indicate support for version 1 as well, for interoperability with systems
-- that indicate support for version 1 only (e.g. ISO 10163-1991
-- implementations).
   }
  Options  ::= [4] IMPLICIT BIT STRING{
         search                 (0),
         present                (1),
         delSet                 (2),
         resourceReport         (3),
         triggerResourceCtrl    (4),
         resourceCtrl           (5),
         accessCtrl             (6),
         scan                   (7),
         sort                   (8),
         --                     (9) (reserved)
         extendedServices       (10),
         level-1Segmentation    (11),
         level-2Segmentation    (12),
         concurrentOperations   (13),
         namedResultSets        (14)}
-- end auxiliary definitions for Init PDUs


--Search APDUs
  SearchRequest ::= SEQUENCE{
   referenceId               [61]ReferenceId OPTIONAL,
      smallSetUpperBound        [13]   IMPLICIT INTEGER,
   largeSetLowerBound           [14]   IMPLICIT INTEGER,
   mediumSetPresentNumber       [15]   IMPLICIT INTEGER,
   replaceIndicator             [16]   IMPLICIT BOOLEAN,
   resultSetName                [17]   IMPLICIT [62]InternationalString,
   databaseNames                [18]   IMPLICIT SEQUENCE OF [63]DatabaseName,
   smallSetElementSetNames      [100]  [64]ElementSetNames
OPTIONAL,
   mediumSetElementSetNames     [101]  [65]ElementSetNames
OPTIONAL,
   preferredRecordSyntax        [104]  IMPLICIT OBJECT IDENTIFIER OPTIONAL,
   query                        [21]   [66]Query,
      -- Following two parameters may be used only if version 3 is in force.
   additionalSearchInfo         [203]  IMPLICIT [67]OtherInformation OPTIONAL,
   otherInfo                           [68]OtherInformation OPTIONAL}


-- Query Definitions
   Query  ::=   CHOICE{
         type-0    [0]    ANY,
         type-1    [1]    IMPLICIT [69]RPNQuery,
         type-2    [2]    OCTET STRING,
         type-100  [100]  OCTET STRING,
         type-101  [101]  IMPLICIT [70]RPNQuery,
         type-102  [102]  OCTET STRING}
--
-- Definitions for RPN query
      RPNQuery ::= SEQUENCE{
         attributeSet        [71]AttributeSetId,
         rpn                 [72]RPNStructure}
--
  RPNStructure ::= CHOICE{
      op        [0] [73]Operand,
      rpnRpnOp  [1] IMPLICIT SEQUENCE{
                      rpn1      [74]RPNStructure,
                      rpn2      [75]RPNStructure,
                      op        [76]Operator }}
   Operand ::= CHOICE{
      attrTerm  [77]AttributesPlusTerm,
      resultSet    [78]ResultSetId,
             -- If version 2 is in force:
             --   - If query type is 1, one of the above two must be chosen;
             --   - resultAttr (below) may be used only if query type is 101.
      resultAttr   [79]ResultSetPlusAttributes}

   AttributesPlusTerm ::= [102] IMPLICIT SEQUENCE{
             attributes   [80]AttributeList,
             term         [81]Term}

   ResultSetPlusAttributes ::= [214] IMPLICIT
SEQUENCE{
             resultSet    [82]ResultSetId,
             attributes   [83]AttributeList}

   AttributeList ::=      [44]  IMPLICIT SEQUENCE OF [84]AttributeElement
--
   Term ::= CHOICE{
      general      [45]   IMPLICIT OCTET STRING,
                   -- values below may be used only if version 3 is in force
      numeric             [215] IMPLICIT INTEGER,
      characterString     [216] IMPLICIT [85]InternationalString,
      oid                 [217] IMPLICIT OBJECT IDENTIFIER,
      dateTime            [218] IMPLICIT GeneralizedTime,
      external            [219] IMPLICIT EXTERNAL,
      integerAndUnit      [220] IMPLICIT [86]IntUnit,
      null                [221] IMPLICIT NULL}

   Operator ::= [46] CHOICE{
              and     [0] IMPLICIT NULL,
              or      [1] IMPLICIT NULL,
              and-not [2] IMPLICIT NULL,
                          -- If version 2 is in force:
                          --    -  For query type 1, one of the above three
                          --       must be chosen;
                          --  -    prox (below) may be used only if query type
                          --       is 101.
             prox     [3] IMPLICIT [87]ProximityOperator}

   AttributeElement  ::=  SEQUENCE{
      attributeSet    [1]       IMPLICIT [88]AttributeSetId OPTIONAL,
                          -- Must be omitted if version 2 is in force.
                          -- If included, overrides value of attributeSet
                          -- in RPNQuery above, but only for this attribute.
      attributeType   [120]  IMPLICIT INTEGER,
      attributeValue      CHOICE{
                     numeric    [121]   IMPLICIT INTEGER,
                             -- If version 2 is in force,
                             -- Must select 'numeric' for attributeValue.

        complex    [224] IMPLICIT SEQUENCE{
                          list     [1] IMPLICIT SEQUENCE OF [89]StringOrNumeric
,
                   semanticAction  [2] IMPLICIT SEQUENCE OF INTEGER OPTIONAL}}}


   ProximityOperator ::= SEQUENCE{
      exclusion           [1] IMPLICIT BOOLEAN OPTIONAL,
      distance            [2] IMPLICIT INTEGER,
      ordered             [3] IMPLICIT BOOLEAN,
      relationType        [4] IMPLICIT INTEGER{
                             lessThan               (1),
                             lessThanOrEqual        (2),
                             equal                  (3),
                             greaterThanOrEqual     (4),
                             greaterThan            (5),
                             notEqual               (6)},
      proximityUnitCode   [5] CHOICE{
                                known     [1] IMPLICIT [90]KnownProximityUnit,
                                private   [2] IMPLICIT INTEGER}}
--
    KnownProximityUnit ::= INTEGER{
                character    (1),
                word         (2),
                sentence     (3),
                paragraph    (4),
                section      (5),
                chapter      (6),
                document     (7),
                element      (8),
                subelement   (9),
                elementType  (10),
                byte         (11) -- Version 3 only
                }
-- End definitions for RPN Query


SearchResponse ::= SEQUENCE{
   referenceId                     [91]ReferenceId OPTIONAL,
   resultCount               [23]  IMPLICIT INTEGER,
   numberOfRecordsReturned   [24]  IMPLICIT INTEGER,
   nextResultSetPosition     [25]  IMPLICIT INTEGER,
   searchStatus              [22]  IMPLICIT BOOLEAN,
   resultSetStatus           [26]  IMPLICIT INTEGER{
                                       subset   (1),
                                       interim  (2),
                                       none     (3)} OPTIONAL,
   presentStatus                   [92]PresentStatus  OPTIONAL,
   records                         [93]Records OPTIONAL,
      -- Following two parameters may be used only if version 3 is in force.
   additionalSearchInfo      [203] IMPLICIT [94]OtherInformation
OPTIONAL,
   otherInfo                       [95]OtherInformation OPTIONAL}



--Retrieval APDUs
  PresentRequest ::= SEQUENCE{
   referenceId                         [96]ReferenceId OPTIONAL,
      resultSetId                      [97]ResultSetId,
   resultSetStartPoint          [30]   IMPLICIT INTEGER,
   numberOfRecordsRequested     [29]   IMPLICIT INTEGER,
   additionalRanges             [212]  IMPLICIT SEQUENCE OF [98]Range
OPTIONAL,
         -- additionalRanges may be included only if version 3 is in force.
   recordComposition            CHOICE{
                                   simple    [19]   [99]ElementSetNames,
                                          -- must choose 'simple' if version 2
                                          -- is in force
                                   complex   [209]  IMPLICIT [100]CompSpec}
OPTIONAL,
   preferredRecordSyntax     [104] IMPLICIT OBJECT IDENTIFIER OPTIONAL,
   maxSegmentCount           [204] IMPLICIT INTEGER OPTIONAL, -- level 1 or 2
   maxRecordSize             [206] IMPLICIT INTEGER OPTIONAL, -- level 2 only
   maxSegmentSize            [207] IMPLICIT INTEGER OPTIONAL, -- level 2 only
   otherInfo                       [101]OtherInformation OPTIONAL}
--

  Segment ::= SEQUENCE{
         -- Segment PDU may only be used when version 3 is in force,
         -- and only when segmentation is in effect.
   referenceId                         [102]ReferenceId OPTIONAL,
   numberOfRecordsReturned      [24]   IMPLICIT INTEGER,
   segmentRecords               [0]    IMPLICIT SEQUENCE OF [103]NamePlusRecord
,
   otherInfo                           [104]OtherInformation OPTIONAL}
--
  PresentResponse ::= SEQUENCE{
   referenceId                     [105]ReferenceId OPTIONAL,
   numberOfRecordsReturned   [24]  IMPLICIT INTEGER,
   nextResultSetPosition     [25]  IMPLICIT INTEGER,
   presentStatus                   [106]PresentStatus,
   records                         [107]Records OPTIONAL,
   otherInfo                       [108]OtherInformation OPTIONAL}
-- begin auxiliary definitions for Search and Present APDUs

-- begin definition of records
  Records ::= CHOICE{
   responseRecords              [28]   IMPLICIT SEQUENCE OF [109]NamePlusRecord
,
   nonSurrogateDiagnostic       [130]  IMPLICIT [110]DefaultDiagFormat,
   multipleNonSurDiagnostics    [205]  IMPLICIT SEQUENCE OF [111]DiagRec}
--
  NamePlusRecord  ::=  SEQUENCE{
   name      [0] IMPLICIT [112]DatabaseName OPTIONAL,
   record    [1] CHOICE{
             retrievalRecord           [1] EXTERNAL,
             surrogateDiagnostic       [2] [113]DiagRec,
                -- Must select one of the above two, retrievalRecord or
                -- surrogateDiagnostic, unless 'level 2 segmentation'
                -- is in effect.
             startingFragment      [3] [114]FragmentSyntax,
             intermediateFragment  [4] [115]FragmentSyntax,
             finalFragment         [5] [116]FragmentSyntax}}

   FragmentSyntax ::= CHOICE{
      externallyTagged       EXTERNAL,
      notExternallyTagged    OCTET STRING}

  DiagRec ::= CHOICE{
         defaultFormat       [117]DefaultDiagFormat,
                      -- Must choose defaultFormat if version 2 is in effect.
         externallyDefined      EXTERNAL}

   DefaultDiagFormat::= SEQUENCE{
      diagnosticSetId        OBJECT IDENTIFIER,
      condition              INTEGER,
      addinfo                CHOICE{
                                v2Addinfo    VisibleString,         -- version
2
                                v3Addinfo    [118]InternationalString    --
version 3
                     }}
  -- end definition of records

   Range  ::= SEQUENCE{
      startingPosition       [1] IMPLICIT INTEGER,
      numberOfRecords        [2] IMPLICIT INTEGER}
--
   ElementSetNames ::= CHOICE {
      genericElementSetName     [0] IMPLICIT [119]InternationalString,
      databaseSpecific          [1] IMPLICIT SEQUENCE OF SEQUENCE{
                                       dbName   [120]DatabaseName,
                                       esn      [121]ElementSetName}}


   PresentStatus   ::=    [27]  IMPLICIT INTEGER{
                                   success      (0),
                                   partial-1    (1),
                                   partial-2    (2),
                                   partial-3    (3),
                                   partial-4    (4),
                                   failure      (5)}

-- begin definition of composition specification
  CompSpec ::= SEQUENCE{
   selectAlternativeSyntax   [1] IMPLICIT BOOLEAN,
                                   -- See comment for recordSyntax, below.
   generic                   [2] IMPLICIT [122]Specification OPTIONAL,
   dbSpecific                [3] IMPLICIT SEQUENCE OF SEQUENCE{
                                   db  [1] [123]DatabaseName,
                                   spec   [2] IMPLICIT [124]Specification}
OPTIONAL,
                                -- At least one of generic and dbSpecific must
                                -- occur, and both may occur. If both, then for
                                -- any record not in the list of databases
                                -- within dbSpecific, generic applies.
   recordSyntax              [4] IMPLICIT SEQUENCE OF OBJECT IDENTIFIER
                                                           OPTIONAL
                                -- For each record, the target selects the
                                -- first record syntax in this list that it can
                                -- support.  If the list is exhausted, the
                                -- target may select an alternative syntax if
                                -- selectAlternativeSyntax is 'true'.
             }

  Specification ::= SEQUENCE{
   schema          [1] IMPLICIT OBJECT IDENTIFIER OPTIONAL,
   elementSpec     [2] CHOICE{
                      elementSetName   [1] IMPLICIT [125]InternationalString,
                      externalEspec    [2] IMPLICIT EXTERNAL} OPTIONAL}
-- end definition of composition specification
-- end auxiliary definitions for search and response APDUs

-- Delete APDUs
  DeleteResultSetRequest ::= SEQUENCE{
   referenceId               [126]ReferenceId OPTIONAL,
   deleteFunction     [32]   IMPLICIT INTEGER{
                                   list   (0),
                                   all    (1)},
   resultSetList             SEQUENCE OF [127]ResultSetId OPTIONAL,
   otherInfo                 [128]OtherInformation OPTIONAL}
--
  DeleteResultSetResponse ::= SEQUENCE{
   referenceId                     [129]ReferenceId OPTIONAL,
   deleteOperationStatus     [0]   IMPLICIT [130]DeleteSetStatus,
   deleteListStatuses        [1]   IMPLICIT [131]ListStatuses OPTIONAL,
   numberNotDeleted          [34]  IMPLICIT INTEGER OPTIONAL,
      bulkStatuses           [35]  IMPLICIT [132]ListStatuses OPTIONAL,
   deleteMessage             [36]  IMPLICIT [133]InternationalString
OPTIONAL,
   otherInfo                       [134]OtherInformation OPTIONAL}

   ListStatuses ::= SEQUENCE OF SEQUENCE{
             id       [135]ResultSetId,
             status   [136]DeleteSetStatus}

   DeleteSetStatus ::= [33] IMPLICIT INTEGER{
                          success                             (0),
                          resultSetDidNotExist                (1),
                          previouslyDeletedByTarget           (2),
                          systemProblemAtTarget               (3),
                          accessNotAllowed                    (4),
                          resourceControlAtOrigin             (5),
                          resourceControlAtTarget             (6),
                          bulkDeleteNotSupported              (7),
                          notAllRsltSetsDeletedOnBulkDlte     (8),
                          notAllRequestedResultSetsDeleted    (9),
                          resultSetInUse                      (10)}
--

--Access- and Resource-control APDUs
--
  AccessControlRequest ::= SEQUENCE{
   referenceId            [137]ReferenceId OPTIONAL,
   securityChallenge      CHOICE{
                             simpleForm         [37] IMPLICIT OCTET STRING,
                             externallyDefined  [0]  EXTERNAL},
   otherInfo              [138]OtherInformation OPTIONAL}

  AccessControlResponse ::= SEQUENCE{
   referenceId                     [139]ReferenceId OPTIONAL,
   securityChallengeResponse           CHOICE{
                                          simpleForm          [38]  IMPLICIT
                                                                    OCTET STRIN
G,
                                          externallyDefined   [0]   EXTERNAL}
                                                                    OPTIONAL,
                                   -- Optional only in version 3; mandatory in
                                   -- version 2. If omitted (in version 3) then
                                   -- diagnostic must occur.
   diagnostic                [223] [140]DiagRec OPTIONAL, -- Version 3 only.
   otherInfo                       [141]OtherInformation OPTIONAL}



  ResourceControlRequest ::= SEQUENCE{
   referenceId                     [142]ReferenceId OPTIONAL,
   suspendedFlag             [39]  IMPLICIT BOOLEAN OPTIONAL,
   resourceReport            [40]  [143]ResourceReport OPTIONAL,
   partialResultsAvailable   [41]  IMPLICIT INTEGER{
                                       subset   (1),
                                       interim  (2),
                                       none     (3)} OPTIONAL,
   responseRequired          [42]  IMPLICIT BOOLEAN,
   triggeredRequestFlag      [43]  IMPLICIT BOOLEAN OPTIONAL,
   otherInfo                       [144]OtherInformation OPTIONAL}


  ResourceControlResponse ::= SEQUENCE{
   referenceId                     [145]ReferenceId OPTIONAL,
   continueFlag              [44]  IMPLICIT BOOLEAN,
   resultSetWanted           [45]  IMPLICIT BOOLEAN OPTIONAL,
   otherInfo                       [146]OtherInformation OPTIONAL}



  TriggerResourceControlRequest ::=
SEQUENCE{
   referenceId                         [147]ReferenceId OPTIONAL,
   requestedAction              [46]   IMPLICIT INTEGER{
                                          resourceReport      (1),
                                          resourceControl     (2),
                                          cancel              (3)},
   prefResourceReportFormat     [47]   IMPLICIT [148]ResourceReportId OPTIONAL,
   resultSetWanted              [48]   IMPLICIT BOOLEAN OPTIONAL,
   otherInfo                           [149]OtherInformation OPTIONAL}



  ResourceReportRequest ::= SEQUENCE{
   referenceId                         [150]ReferenceId OPTIONAL,
   opId                         [210]  IMPLICIT [151]ReferenceId OPTIONAL,
   prefResourceReportFormat     [49]   IMPLICIT [152]ResourceReportId OPTIONAL,
   otherInfo                           [153]OtherInformation OPTIONAL}
--
  ResourceReportResponse ::= SEQUENCE{
   referenceId                  [154]ReferenceId OPTIONAL,
   resourceReportStatus   [50]  IMPLICIT INTEGER{
                                   success          (0),
                                   partial          (1),
                                   failure-1        (2),
                                   failure-2        (3),
                                   failure-3        (4),
                                   failure-4        (5),
                                   failure-5        (6),
                                   failure-6        (7)},
   resourceReport         [51]  [155]ResourceReport OPTIONAL,
   otherInfo                    [156]OtherInformation OPTIONAL}
--
   ResourceReport         ::=   EXTERNAL
   ResourceReportId       ::=   OBJECT IDENTIFIER

--Scan APDUs
  ScanRequest ::= SEQUENCE{
   referenceId                            [157]ReferenceId OPTIONAL,
   databaseNames                   [3]    IMPLICIT SEQUENCE OF [158]DatabaseNam
e,
   attributeSet                           [159]AttributeSetId OPTIONAL,
   termListAndStartPoint                  [160]AttributesPlusTerm,
   stepSize                        [5]    IMPLICIT INTEGER OPTIONAL,
   numberOfTermsRequested          [6]    IMPLICIT INTEGER,
   preferredPositionInResponse     [7]    IMPLICIT INTEGER OPTIONAL,
   otherInfo                              [161]OtherInformation
OPTIONAL}

  ScanResponse ::= SEQUENCE{
   referenceId                         [162]ReferenceId OPTIONAL,
   stepSize                     [3]    IMPLICIT INTEGER OPTIONAL,
   scanStatus                   [4]    IMPLICIT INTEGER {
                                       success  (0),
                                       partial-1    (1),
                                       partial-2    (2),
                                       partial-3    (3),
                                       partial-4    (4),
                                       partial-5    (5),
                                       failure  (6) },
   numberOfEntriesReturned      [5]    IMPLICIT INTEGER,
   positionOfTerm               [6]    IMPLICIT INTEGER OPTIONAL,
   entries                      [7]    IMPLICIT [163]ListEntries  OPTIONAL,
   attributeSet                 [8]    IMPLICIT [164]AttributeSetId
OPTIONAL,
   otherInfo                           [165]OtherInformation OPTIONAL}


-- begin auxiliary definitions for Scan
  ListEntries ::= SEQUENCE{
   entries                   [1]   IMPLICIT SEQUENCE OF [166]Entry OPTIONAL,
   nonsurrogateDiagnostics   [2]   IMPLICIT SEQUENCE OF [167]DiagRec
OPTIONAL
      -- At least one of entries and nonsurrogateDiagnostic must occur
                }

  Entry  ::= CHOICE {
   termInfo                  [1]   IMPLICIT [168]TermInfo,
   surrogateDiagnostic       [2]   [169]DiagRec}
--
  TermInfo ::= SEQUENCE {
   term                            [170]Term,
   displayTerm        [0]    IMPLICIT [171]InternationalString
OPTIONAL,
                                -- Presence of displayTerm means that term is
                                -- not considered by the target to be suitable
                                -- for display, and displayTerm should instead
                                -- be displayed. 'term' is the actual term in
                                -- the term list; 'displayTerm' is for display
                                -- purposes only, and is not an actual term in
                                -- the term list.
   suggestedAttributes          [172]AttributeList OPTIONAL,
   alternativeTerm        [4]   IMPLICIT SEQUENCE OF [173]AttributesPlusTerm
                                                 OPTIONAL,
   globalOccurrences      [2]   IMPLICIT INTEGER OPTIONAL,
   byAttributes           [3]   IMPLICIT [174]OccurrenceByAttributes OPTIONAL,
   otherTermInfo                [175]OtherInformation OPTIONAL}

  OccurrenceByAttributes ::= SEQUENCE OF
SEQUENCE{
      attributes      [1]    [176]AttributeList,
      occurrences            CHOICE{
                                global       [2]    INTEGER,
                                byDatabase   [3]    IMPLICIT SEQUENCE OF
                                                     SEQUENCE{
                                                       db           [177]Databa
seName,
                                                       num    [1]   IMPLICIT
                                                                 INTEGER OPTION
AL,
                                otherDbInfo         [178]OtherInformation
OPTIONAL}}
                                                                     OPTIONAL,
                                otherOccurInfo      [179]OtherInformation
OPTIONAL}
-- end auxiliary definitions for Scan

-- Sort APDUs
SortRequest  ::= SEQUENCE{
   referenceId                  [180]ReferenceId OPTIONAL,
   inputResultSetNames    [3]   IMPLICIT SEQUENCE OF [181]InternationalString,
   sortedResultSetName    [4]   IMPLICIT [182]InternationalString,
   sortSequence           [5]   IMPLICIT SEQUENCE OF [183]SortKeySpec,
                                   -- order of occurrence is
                                   -- from major to minor
   otherInfo                    [184]OtherInformation OPTIONAL}

SortResponse  ::= SEQUENCE{
   referenceId                  [185]ReferenceId OPTIONAL,
   sortStatus             [3]   IMPLICIT INTEGER{
                                   success   (0),
                                   partial-1    (1),
                                   failure   (2)},
   resultSetStatus        [4]   IMPLICIT INTEGER{
                                   empty        (1),
                                   interim      (2),
                                   unchanged    (3),
                                   none         (4)} OPTIONAL,
   diagnostics            [5]   IMPLICIT SEQUENCE OF [186]DiagRec
OPTIONAL,
   otherInfo                    [187]OtherInformation OPTIONAL}

-- begin auxiliary definitions for Sort
   SortKeySpec ::= SEQUENCE{
     sortElement                   [188]SortElement,
        sortRelation         [1]   IMPLICIT INTEGER{
                                       ascending                 (0),
                                       descending                (1),
                                       ascendingByFrequency      (3),
                                       descendingByfrequency     (4)},
     caseSensitivity         [2]   IMPLICIT INTEGER{
                                       caseSensitive          (0),
                                       caseInsensitive        (1)},
      missingValueAction     [3]   CHOICE{
                                       abort              [1] IMPLICIT NULL,
                                       null               [2] IMPLICIT NULL,
                                                          -- supply a null  val
ue
                                                          -- for missing value
                                       missingValueData   [3] IMPLICIT OCTET
                                                               STRING} OPTIONAL
}

   SortElement ::=    CHOICE{
     generic                 [1] [189]SortKey,
        datbaseSpecific      [2] IMPLICIT SEQUENCE OF SEQUENCE{
                                   databaseName     [190]DatabaseName,
                                   dbSort           [191]SortKey}}

   SortKey ::= CHOICE{
     sortfield        [0]    IMPLICIT [192]InternationalString,
                                -- An element, element-group-tag, or alias
                                -- supported by the target and denoting a set
                                -- of elements associated with each record.
     elementSpec      [1]    IMPLICIT [193]Specification,
     sortAttributes   [2]    IMPLICIT SEQUENCE{
                                id     [194]AttributeSetId,
                                list   [195]AttributeList}}
-- end auxiliary definitions for sort



-- Extended Service APDUs
  ExtendedServicesRequest  ::= SEQUENCE{
   referenceId                     [196]ReferenceId OPTIONAL,
   function                  [3]   IMPLICIT INTEGER {
                                       create       (1),
                                       delete       (2),
                                       modify   (3)},
   packageType               [4]   IMPLICIT OBJECT IDENTIFIER,
   packageName               [5]   IMPLICIT [197]InternationalString
OPTIONAL,
                                       -- PackageName mandatory for 'modify' or
                                       -- 'delete'; optional for 'create'.
                                       -- Following four parameters mandatory
                                       -- for 'create'; should be included on
                                       -- 'modify' if being modified; not neede
d
                                       -- on 'delete'.
   userId                    [6]   IMPLICIT [198]InternationalString
OPTIONAL,
   retentionTime             [7]   IMPLICIT [199]IntUnit OPTIONAL,
   permissions               [8]   IMPLICIT [200]Permissions OPTIONAL,
   description               [9]   IMPLICIT [201]InternationalString
OPTIONAL,
   taskSpecificParameters    [10]  IMPLICIT EXTERNAL OPTIONAL,
                                       -- Mandatory for 'create'; included on
                                       -- 'modify' if specific parameters being
                                       -- modified; not necessary on 'delete'.
                                       -- For the 'EXTERNAL,' use OID of
                                       -- specific ES definition and select
                                       -- CHOICE [1]: 'esRequest'.
   waitAction                [11]  IMPLICIT INTEGER{
                                       wait               (1),
                                       waitIfPossible     (2),
                                       dontWait           (3),
                                       dontReturnPackage  (4)},
   elements                        [202]ElementSetName OPTIONAL,
   otherInfo                       [203]OtherInformation OPTIONAL}
--

ExtendedServicesResponse ::= SEQUENCE{
   referenceId                     [204]ReferenceId OPTIONAL,
   operationStatus           [3]   IMPLICIT INTEGER{
                                       done         (1),
                                       accepted     (2),
                                       failure      (3)},
   diagnostics               [4]   IMPLICIT SEQUENCE OF [205]DiagRec
OPTIONAL,
   taskPackage               [5]   IMPLICIT EXTERNAL OPTIONAL,
                                       -- Use OID: {Z39-50-recordSyntax (106)}
                                       -- and corresponding syntax. For the
                                       -- EXTERNAL, 'taskSpecific,' within that
                                       -- definition, use OID of the specific
                                       -- es, and choose [2], 'taskPackage'.
   otherInfo                       [206]OtherInformation OPTIONAL}

 Permissions ::= SEQUENCE OF SEQUENCE{
   userId                 [1] IMPLICIT [207]InternationalString,
   allowableFunctions     [2] IMPLICIT SEQUENCE OF INTEGER{
                                delete              (1),
                                modifyContents      (2),
                                modifyPermissions   (3),
                                present             (4),
                                   invoke           (5)}}

Close ::= SEQUENCE{
   referenceId                     [208]ReferenceId OPTIONAL,  -- See
3.2.11.1.5.
   closeReason                     [209]CloseReason,
   diagnosticInformation     [3]   IMPLICIT [210]InternationalString OPTIONAL,
   resourceReportFormat      [4]   IMPLICIT [211]ResourceReportId OPTIONAL,
                                       -- For use by origin only, and only on
                                       -- Close request; origin requests target
                                       -- to include report in response.
   resourceReport            [5]   [212]ResourceReport OPTIONAL,
                                       -- For use by target only, unilaterally
                                       -- on Close request; on Close response
                                       -- may be unilateral or in response to
                                       -- origin request.
   otherInfo                       [213]OtherInformation OPTIONAL}

   CloseReason ::=    [211]  IMPLICIT INTEGER{
                                finished            (0),
                                shutdown            (1),
                                systemProblem       (2),
                                costLimit           (3),
                                resources           (4),
                                securityViolation   (5),
                                protocolError       (6),
                                lackOfActivity      (7),
                                peerAbort           (8),
                                unspecified         (9)}


-- Global auxiliary definitions
   ReferenceId            ::=      [2]       IMPLICIT OCTET STRING
   ResultSetId            ::=      [31]      IMPLICIT [214]InternationalString
   ElementSetName         ::=      [103]     IMPLICIT [215]InternationalString
   DatabaseName           ::=      [105]     IMPLICIT [216]InternationalString
   AttributeSetId         ::=                OBJECT IDENTIFIER


-- OtherInformation
   OtherInformation    ::= [201] IMPLICIT SEQUENCE OF
SEQUENCE{
      category               [1]   IMPLICIT [217]InfoCategory OPTIONAL,
      information     CHOICE{
             characterInfo                [2]   IMPLICIT [218]InternationalStri
ng,
             binaryInfo                   [3]   IMPLICIT OCTET STRING,
             externallyDefinedInfo        [4]   IMPLICIT EXTERNAL,
             oid                          [5]   IMPLICIT OBJECT IDENTIFIER}}
--
   InfoCategory ::= SEQUENCE{
         categoryTypeId   [1]   IMPLICIT OBJECT IDENTIFIER OPTIONAL,
         categoryValue    [2]   IMPLICIT INTEGER}


-- Units
   -- IntUnit is used when value and unit are supplied together. Unit, alone,
   -- is used when just  specifying a unit (without a value).  For example,
   -- IntUnit is used in Term, in an RPNQuery, or it can be the datatype of
   -- an element within a retrieval record. Unit (alone) would be used in an
   -- element request, when requesting data be returned according to a
   -- particular unit.

   IntUnit ::= SEQUENCE{
      value     [1] IMPLICIT INTEGER,
      unitUsed  [2] IMPLICIT [219]Unit}
--
   Unit ::= SEQUENCE{
      unitSystem   [1] [220]InternationalString OPTIONAL,      --
e.g. 'SI'
      unitType     [2] [221]StringOrNumeric OPTIONAL,          --
e.g. 'mass'
      unit         [3] [222]StringOrNumeric OPTIONAL,          -- e.g.
'kilograms'
      scaleFactor  [4] IMPLICIT INTEGER OPTIONAL          -- e.g. 9 means 10**9
             }

--CharacterString
   InternationalString ::= GeneralString
      -- When version 2 is in force, this collapses to VisibleString. That
      -- is, only characters in the visibleString repertoire may be used.
      -- (Datatype compatibility with version 2 is not affected, because
      -- references are IMPLICIT.)  When version 3 is in force, the semantics
      -- of the GeneralString content may be altered by negotiation during
      -- initialization. If no such  negotiation is in effect, then
      -- GeneralString semantics are in force.

StringOrNumeric ::= CHOICE{
   string       [1] IMPLICIT [223]InternationalString,
   numeric      [2] IMPLICIT INTEGER}

END --IR DEFINITIONS





DiagnosticFormatDiag1
{Z39-50-diagnosticFormat diag-1 (2)} DEFINITIONS ::=
BEGIN
IMPORTS [224]Term, [225]Specification, [226]AttributeList, [227]SortElement,
[228]DatabaseName,
[229]DefaultDiagFormat, [230]InternationalString FROM Z39-50-APDU-1995;


DiagnosticFormat ::=  SEQUENCE OF SEQUENCE{
   diagnostic   [1] CHOICE{
                     defaultDiagRec          [1]   IMPLICIT [231]DefaultDiagFor
mat,
                     explicitDiagnostic      [2]   [232]DiagFormat} OPTIONAL,
   message      [2] IMPLICIT [233]InternationalString
OPTIONAL}


DiagFormat ::= CHOICE{

tooMany         [1000]    IMPLICIT SEQUENCE{
                           tooManyWhat    [1]   IMPLICIT INTEGER{
                                                    argumentWords          (1),

                                                    truncatedWords         (2),

                                                    booleanOperators       (3),
                                                    incompleteSubfields    (4),

                                                    characters             (5),
                                                    recordsRetrieved       (6),

                                                    dataBasesSpecified     (7),
                                                    resultSetsCreated      (8),

                                                    indexTermsProcessed    (9)}
,
                           max            [2]   IMPLICIT INTEGER OPTIONAL},


badSpec         [1001]   IMPLICIT SEQUENCE{
                      -- element set name or specification
                        spec       [1] IMPLICIT [234]Specification,
                                          -- esn or element spec not supported
                        db         [2] IMPLICIT [235]DatabaseName
OPTIONAL,
                                          -- if db specified, above spec not
                                          -- supported for db; otherwise,
                                          -- spec not supported period.
                        goodOnes   [3] IMPLICIT SEQUENCE OF [236]Specification
                                                                  OPTIONAL
                                          -- target supplies ones that are
                                          -- supported
                                          },


dbUnavail       [1002]   IMPLICIT SEQUENCE{ -- database unavailable
                          db    [1] IMPLICIT [237]DatabaseName,
                          why   [2] IMPLICIT SEQUENCE{
                                    reasonCode      [1] IMPLICIT INTEGER{
                                                          doesNotExist        (
0),
                                                          existsButUnavail    (
1),
                                                          locked              (
2),
                                                          accessDenied        (
3)}
                                                              OPTIONAL,
                                    message         [2] IMPLICIT
                                                [238]InternationalString
OPTIONAL}},


unSupOp         [1003]   IMPLICIT INTEGER{  -- unsupported operator
                          and       (0),
                          or        (1),
                          and-not   (2),
                          prox      (3)},


attribute       [1004]   IMPLICIT SEQUENCE{
                             -- Applies for unsupported attribute set,
                             -- attribute type, attribute value, or term (for
                             -- a given attribute type or value).
                        id         [1]    IMPLICIT OBJECT IDENTIFIER,
                                             -- if only "id" occurs, then
                                             -- attribute set is not supported
                        type       [2]    IMPLICIT INTEGER OPTIONAL,
                                             -- must occur if value occurs.
                        value      [3]    IMPLICIT INTEGER OPTIONAL,
                                             -- if omitted, and Type occurs,
                                             -- then Type is what is unsupporte
d
                        term       [4]    Term OPTIONAL
                                             -- If occurs, term is illegal or
                                             -- not supported, for attribute
                                             -- value, if value occurs;
                                             -- otherwise, for type.
                                                },


attCombo     [1005]   IMPLICIT SEQUENCE{
                             -- attribute combination not supported
                          unsupportedCombination    [1] IMPLICIT [239]Attribute
List,
                          recommendedAlternatives   [2] IMPLICIT SEQUENCE OF
                                                     [240]AttributeList OPTIONA
L},


term            [1006]   IMPLICIT SEQUENCE{
                           problem      [1] IMPLICIT INTEGER{
                                                codedValue   (1),
                                                unparsable   (2),
                                                tooShort     (3),
                                                type         (4)} OPTIONAL,
                           term         [2] [241]Term},


proximity       [1007] CHOICE{            -- proximity diagnostics:
                          resultSets   [1] IMPLICIT NULL,
                                             -- proximity between sets not
                                             -- supported
                          badSet       [2] IMPLICIT [242]InternationalString,

                                             -- bad result set specified
                          relation     [3] IMPLICIT INTEGER,
                                             -- 1 to 6 ; relation not supported
                          unit         [4] IMPLICIT INTEGER,
                                             -- unsupported unit code
                          distance     [5] IMPLICIT INTEGER,
                                             -- unsupported distance
                          attributes   [6] [243]AttributeList,

                                             --   proximity not supported with
                                             -- specified attribute combination
                          ordered      [7] IMPLICIT NULL,
                                             -- ordered flag not supported
                          exclusion    [8] IMPLICIT NULL
                                             -- exclusion flag not supported
                              },


scan            [1008] CHOICE{         -- scan diagnostics:
                          nonZeroStepSize    [0] IMPLICIT NULL,
                                                    -- only zero step size
                                                    -- supported
                          specifiedStepSize  [1] IMPLICIT NULL,
                                                    -- specified step size not
                                                    -- supported
                          termList1          [3] IMPLICIT NULL,
                                                    -- term list not supported
                                                    -- (no alternative supplied
)
                          termList2          [4] IMPLICIT SEQUENCE OF
                                                           [244]AttributeList,
                                                    -- term list not supported
                                                    -- (alternatives supplied)
                          posInResponse      [5] IMPLICIT INTEGER{
                                                       -- value of positionIn-
                                                       -- Response not supporte
d
                                                    mustBeOne              (1),
                                                    mustBePositive         (2),
                                                    mustBeNonNegative      (3),
                                                    other                  (4)}
,
                          resources         [6] IMPLICIT NULL,
                                                    -- resources exhausted
                                                    -- looking for satisfying
                                                    -- terms
                          endOfList         [7] IMPLICIT NULL
                                                    -- beginning or end of term
                                                    -- list
                        },


sort            [1009] CHOICE{
                          sequence           [0] IMPLICIT NULL,
                                                    -- cannot sort according
                                                    -- to sequence
                          noRsName           [1] IMPLICIT NULL,
                                                    -- no result set name
                                                    -- supplied
                          tooMany            [2] IMPLICIT INTEGER,
                                                    --  Too many input result
                                                    -- sets, maximum supplied.
                          incompatible       [3] IMPLICIT NULL,
                                                    -- records with different
                                                    -- formats not compatible f
or
                                                    -- sorting
                          generic            [4] IMPLICIT NULL,
                                                    -- generic sort not support
ed
                                                    -- (db specific only)
                          dbSpecific         [5] IMPLICIT NULL,
                                                    -- db specific sort not
                                                    -- supported
                          sortElement        [6] [245]SortElement,
                          key                [7] IMPLICIT INTEGER{
                                                    tooMany      (1),
                                                       -- too many sort keys
                                                    duplicate    (2)},
                                                       -- duplicate sort keys
                          action             [8] IMPLICIT NULL,
                                                -- unuspported missing data
                                                -- action
                          illegal            [9] IMPLICIT INTEGER{
                                                    relation   (1),
                                                       -- illegal sort relation
                                                    case      (2),
                                                       -- illegal case value
                                                    action   (3),
                                                       -- illegal missing data
                                                       -- action
                                                    sort      (4)},
                                                       -- illegal sort
                          inputTooLarge      [10] IMPLICIT SEQUENCE OF
                                                   [246]InternationalString,
                                                       -- one or more of the
                                                       -- input result sets too
                                                       -- large to sort
                          aggregateTooLarge  [11] IMPLICIT NULL
                                                       --  aggregate result set
                                                       -- too large
                                       },
segmentation  [1010]  CHOICE{
                segmentCount  [0]    IMPLICIT NULL,
                                       -- Cannot guarantee record will fit
                                       -- within max segments. Target
                                       -- suggests that origin try again
                                       -- to retrieve record, without
                                       -- including max-segment-count.
                segmentSize  [1]    IMPLICIT INTEGER
                                       -- record cannot be segmented into
                                       -- fragments such that the largest
                                       -- will fit within max segment
                                       -- size specified. Target supplies (in
                                       -- bytes) the smallest acceptable value.
                                       -- of Max-segment-size to retrieve
                                       -- the record.
                          },

extServices     [1011] CHOICE{
                        req        [1] IMPLICIT INTEGER{    -- bad request
                                          nameInUse       (1),
                                             -- package name already in use
                                          noSuchName      (2),
                                             -- no such package, on
                                             -- modify/delete
                                          quota            (3),
                                             -- quota exceeded
                                          type            (4)},
                                             -- extended service type not
                                             -- supported
                      permission   [2] IMPLICIT INTEGER{
                                       -- permission denied on ES, because:
                                          id             (1),
                                             -- id not authorized, or
                                          modifyDelete   (2)},
                                             -- cannot modify or delete
                      immediate    [3] IMPLICIT INTEGER{
                                       -- immediate execution:
                                          failed          (1),
                                          service         (2),
                                             -- not supported for this service,

                                         parameters       (3)
                                             -- not supported for these
                                             -- parameters.
                                                }},


accessCtrl      [1012] CHOICE{
                          noUser       [1] IMPLICIT NULL,
                                             -- no user to display challenge to
                          refused      [2] IMPLICIT NULL,
                                             -- access control information
                                             -- refused by user
                          simple       [3] IMPLICIT NULL,
                                             -- only simple form supported
                                             -- (target used externally defined
)
                          oid          [4] IMPLICIT SEQUENCE OF OBJECT
                                                     IDENTIFIER,
                                             -- oid not supported (origin
                                             -- supplies alternative suggested
                                             -- oids)
                        alternative    [5] IMPLICIT SEQUENCE OF OBJECT
                                                     IDENTIFIER,
                                             -- origin insists that target use
                                             -- an alternative challenge for
                                             -- this data (e.g. stronger
                                             -- authentication or stronger
                                             -- Access control). The origin
                                             -- supplies suggested alternative
                                             -- oids.
                        pwdInv         [6] IMPLICIT NULL,
                                             -- password invalid
                        pwdExp         [7] IMPLICIT NULL
                                             -- password expired
                              },


recordSyntax   [1013] IMPLICIT SEQUENCE{
                   -- record cannot be transferred in requested syntax
                          unsupportedSyntax         [1] IMPLICIT OBJECT
                                                           IDENTIFIER,
                          suggestedAlternatives     [2] IMPLICIT SEQUENCE OF
                                                        OBJECT IDENTIFIER
                                                           OPTIONAL}
}
END






RecordSyntax-explain
{Z39-50-recordSyntax explain (100)} DEFINITIONS ::=

BEGIN
IMPORTS [247]AttributeSetId, [248]Term, [249]OtherInformation, [250]DatabaseNam
e, [251]ElementSetName,
[252]IntUnit, [253]Unit, [254]StringOrNumeric, [255]Specification,
[256]InternationalString,
[257]AttributeList, [258]AttributeElement
FROM Z39-50-APDU-1995;

Explain-Record ::= CHOICE{
   -- Each of these may be used as search term
   -- when Use attribute is 'explain-category'.
  targetInfo                 [0]   IMPLICIT [259]TargetInfo,
  databaseInfo               [1]   IMPLICIT [260]DatabaseInfo,
  schemaInfo                 [2]   IMPLICIT [261]SchemaInfo,
  tagSetInfo                 [3]   IMPLICIT [262]TagSetInfo,
  recordSyntaxInfo           [4]   IMPLICIT [263]RecordSyntaxInfo,
  attributeSetInfo           [5]   IMPLICIT [264]AttributeSetInfo,
  termListInfo               [6]   IMPLICIT [265]TermListInfo,
  extendedServicesInfo       [7]   IMPLICIT [266]ExtendedServicesInfo,
  attributeDetails           [8]   IMPLICIT [267]AttributeDetails,
  termListDetails            [9]   IMPLICIT [268]TermListDetails,
  elementSetDetails          [10]  IMPLICIT [269]ElementSetDetails,
  retrievalRecordDetails     [11]  IMPLICIT [270]RetrievalRecordDetails,
  sortDetails                [12]  IMPLICIT [271]SortDetails,
  processing                 [13]  IMPLICIT [272]ProcessingInformation,
  variants                   [14]  IMPLICIT [273]VariantSetInfo,
  units                      [15]  IMPLICIT [274]UnitInfo,
  categoryList               [100] IMPLICIT [275]CategoryList}

-- Element set name 'B' (brief)  retrieves:
--   -  'commonInfo' (except for otherInfo within commonInfo)
--   -  key elements
--   -  other elements designated as 'non-key brief elements'
-- Esn 'description' retrieves brief elements as well as 'description', and
-- specific additional descriptive elements if designated.
-- Element set name 'F' (full) retrieves all of the above, as well as those
-- designated as "non-brief elements". Some elements designated as OPTIONAL
-- may be madatory in full records, and are so identified. (Note that all
-- elements that are not part of the brief element set must be designated as
-- OPTIONAL in the ASN.1, otherwise it would be illegal to omit them).
-- Other esns are defined (below) as needed.


-- - - - - - - - - - - - -   Info Records
  -- Info records are mainly for software consumption
  -- They describe individual entities within the target system:
  --     The target itself
  --     Individual databases
  --     Schemas
  --     Tag sets
  --     Record syntaxes
  --     Attribute sets
  --     Term lists
  --     Extended services
 --   The information about each Schema, Tag Set, Record Syntax and Attribute
 -- Set should match the universal definitions of these items. The only
 -- exception is that a target may omit any- items it doesn't support, for
 -- example the description of the BIB-1 attribute set may omit attributes
 -- that the target does not support under any circumstances.
 --   Databases that may be searched together can be listed in the
 -- dbCominations element of the TargetInfo record.



TargetInfo ::= SEQUENCE {
  commonInfo          [0]    IMPLICIT [276]CommonInfo OPTIONAL,
     -- Key elements follow:
  name                [1]    IMPLICIT [277]InternationalString,
     -- Non-key brief elements follow:
  recent-news         [2]    IMPLICIT [278]HumanString OPTIONAL,
  icon                [3]    IMPLICIT [279]IconObject OPTIONAL,
  namedResultSets     [4]    IMPLICIT BOOLEAN,
  multipleDBsearch    [5]    IMPLICIT BOOLEAN,
  maxResultSets       [6]    IMPLICIT INTEGER OPTIONAL,
  maxResultSize       [7]    IMPLICIT INTEGER OPTIONAL,
  maxTerms            [8]    IMPLICIT INTEGER OPTIONAL,
  timeoutInterval     [9]    IMPLICIT [280]IntUnit OPTIONAL,
  welcomeMessage      [10]   IMPLICIT [281]HumanString
OPTIONAL,
      -- non-brief elements follow:
      -- 'description' esn retrieves the following two (as well as brief):
  contactInfo         [11]   IMPLICIT [282]ContactInfo OPTIONAL,
  description         [12]   IMPLICIT [283]HumanString OPTIONAL,
  nicknames           [13]   IMPLICIT SEQUENCE OF [284]InternationalString
                                              OPTIONAL,
  usage-restrictions  [14]   IMPLICIT [285]HumanString OPTIONAL,
  paymentAddr         [15]   IMPLICIT [286]HumanString OPTIONAL,
  hours               [16]   IMPLICIT [287]HumanString OPTIONAL,
  dbCombinations      [17]   IMPLICIT SEQUENCE OF [288]DatabaseList OPTIONAL,
  addresses           [18]   IMPLICIT SEQUENCE OF [289]NetworkAddress OPTIONAL,
  languages           [101]  IMPLICIT SEQUENCE OF [290]InternationalStringOPTIO
NAL,
                  -- Languages supported for message strings.  Each is a three-
character
                  -- language code from Z39.53-1994.
-- characterSets      [102]  this tag reserved for "character sets supported fo
r name and message
strings".

   -- commonAccessInfo elements list objects the target supports. All objects
   -- listed in AccessInfo for any individual database should also be listed
   -- here.
  commonAccessInfo    [19]   IMPLICIT [291]AccessInfo OPTIONAL}
--


DatabaseInfo ::= SEQUENCE {
         -- A target may provide "virtual databases" that are combinations of
         -- individual database. These databases are indicated by the
         -- presence of subDbs in the combination database's
         -- DatabaseDescription.
  commonInfo              [0]   IMPLICIT [292]CommonInfo OPTIONAL,
    -- Key elements follow:
  name                    [1]   IMPLICIT [293]DatabaseName,
    -- Non-key brief elements follow:
  explainDatabase         [2]   IMPLICIT NULL OPTIONAL,
                                   -- If present, this database is the Explain
                                   -- database, or an Explain database
                                   -- for a different  server,
                                   -- possibly on a different host. The means
                                   -- by which that server may be accessed is
                                   -- not addressed by this standard. One
                                   -- suggested possibility is an implementor
                                   -- agreement whereby the database name is a
                                   -- url which may be used to connect to the
                                   -- server.
  nicknames               [3]   IMPLICIT SEQUENCE OF [294]DatabaseName OPTIONAL
,
  icon                    [4]   IMPLICIT [295]IconObject OPTIONAL,
  user-fee                [5]   IMPLICIT BOOLEAN,
  available               [6]   IMPLICIT BOOLEAN,
  titleString             [7]   IMPLICIT [296]HumanString OPTIONAL,
    -- Non-brief elements follow:
  keywords                [8]   IMPLICIT SEQUENCE OF [297]HumanString OPTIONAL,
  description             [9]   IMPLICIT [298]HumanString OPTIONAL,
  associatedDbs           [10]  IMPLICIT [299]DatabaseList OPTIONAL,
                                   -- databases that may be searched in
                                   -- combination with this one
  subDbs                  [11   IMPLICIT [300]DatabaseList OPTIONAL,
                                   -- When present, this database is a
                                   -- composite representing the combined
                                   -- databases 'subDbs'. The individual subDbs
                                   -- are also available.
  disclaimers             [12]  IMPLICIT [301]HumanString OPTIONAL,
  news                    [13]  IMPLICIT [302]HumanString OPTIONAL,
  recordCount             [14]  CHOICE {
                                   actualNumber   [0] IMPLICIT INTEGER,
                                   approxNumber   [1] IMPLICIT INTEGER}
                                                           OPTIONAL,
  defaultOrder            [15]  IMPLICIT [303]HumanString OPTIONAL,
  avRecordSize            [16]  IMPLICIT INTEGER OPTIONAL,
  maxRecordSize           [17]  IMPLICIT INTEGER OPTIONAL,
  hours                   [18]  IMPLICIT [304]HumanString OPTIONAL,
  bestTime                [19]  IMPLICIT [305]HumanString OPTIONAL,
  lastUpdate              [20]  IMPLICIT GeneralizedTime OPTIONAL,
  updateInterval          [21]  IMPLICIT [306]IntUnit OPTIONAL,
  coverage                [22]  IMPLICIT [307]HumanString OPTIONAL,
  proprietary             [23]  IMPLICIT BOOLEAN OPTIONAL,
                                -- mandatory in full record
  copyrightText           [24]  IMPLICIT [308]HumanString OPTIONAL,
  copyrightNotice         [25]  IMPLICIT [309]HumanString
OPTIONAL,
  producerContactInfo     [26]  IMPLICIT [310]ContactInfo
OPTIONAL,
  supplierContactInfo     [27]  IMPLICIT [311]ContactInfo OPTIONAL,
  submissionContactInfo   [28]  IMPLICIT [312]ContactInfo
OPTIONAL,
      -- accessInfo lists items connected with the database. All listed items
      -- should be in the target's AccessInfo.
  accessInfo              [29]  IMPLICIT [313]AccessInfo OPTIONAL}



SchemaInfo ::= SEQUENCE {
  commonInfo       [0] IMPLICIT [314]CommonInfo OPTIONAL,
     -- Key elements follow:
  schema           [1] IMPLICIT OBJECT IDENTIFIER,
     -- Non-key brief elements follow:
  name             [2] IMPLICIT [315]InternationalString,
     -- Non-brief elements follow:
  description      [3] IMPLICIT [316]HumanString OPTIONAL,
  tagTypeMapping   [4] IMPLICIT SEQUENCE OF SEQUENCE {
                          tagType         [0] IMPLICIT INTEGER,
                          tagSet          [1] IMPLICIT OBJECT IDENTIFIER
                                                        OPTIONAL,
                                                -- If tagSet is omitted, then
                                                -- this tagType is for a tagSet
                                                -- locally defined within the
                                                -- schema that cannot be
                                                -- referenced by another schema
.
                          defaultTagType  [2] IMPLICIT NULL OPTIONAL} OPTIONAL,
  recordStructure  [5] IMPLICIT SEQUENCE OF [317]ElementInfo
OPTIONAL}



   --  ElementInfo referenced in SchemaInfo and RecordSyntaxInfo
      ElementInfo ::= SEQUENCE {
         elementName      [1] IMPLICIT [318]InternationalString,
         elementTagPath   [2] IMPLICIT [319]Path,
         dataType         [3] [320]ElementDataType OPTIONAL,
                                -- If omitted, not specified.
          required        [4] IMPLICIT BOOLEAN,
         repeatable       [5] IMPLICIT BOOLEAN,
          description     [6] IMPLICIT [321]HumanString OPTIONAL}

   -- Path is referenced by ElementInfo as well as PerElementDetails
       Path ::= SEQUENCE OF SEQUENCE{
         tagType      [1] IMPLICIT INTEGER,
         tagValue     [2] [322]StringOrNumeric}

      ElementDataType ::= CHOICE{
         primitive    [0] IMPLICIT [323]PrimitiveDataType,
         structured   [1] IMPLICIT SEQUENCE OF [324]ElementInfo}
         PrimitiveDataType ::= INTEGER{
                                octetString     (0),
                                numeric         (1),
                                date            (2),
                                external        (3),
                                string          (4),
                                trueOrFalse     (5),
                                oid             (6),
                                intUnit         (7),
                                empty           (8),
                                noneOfTheAbove  (100) -- see 'description'
                  }


TagSetInfo ::= SEQUENCE {
   commonInfo      [0]    IMPLICIT [325]CommonInfo OPTIONAL,
     -- Key elements follow:
   tagSet          [1]    IMPLICIT OBJECT IDENTIFIER,
     -- non-key brief elements follow:
   name            [2]    IMPLICIT [326]InternationalString,
     -- non-brief elements follow:
   description     [3]    IMPLICIT [327]HumanString OPTIONAL,
   elements        [4]    IMPLICIT SEQUENCE OF SEQUENCE {
                             elementname  [1] IMPLICIT [328]InternationalString
,
                             nicknames    [2] IMPLICIT SEQUENCE OF
                                             [329]InternationalString
OPTIONAL,
                             elementTag   [3] [330]StringOrNumeric,
                             description  [4] IMPLICIT [331]HumanString
OPTIONAL,
                             dataType     [5] [332]PrimitiveDataType
OPTIONAL,
                                                -- If the data type is expected
                                                -- to be structured, that is
                                                -- described in the schema info
,
                                                -- and datatypeis omitted here.
   otherTagInfo           [333]OtherInformation OPTIONAL}
OPTIONAL}



RecordSyntaxInfo ::= SEQUENCE {
  commonInfo          [0] IMPLICIT [334]CommonInfo OPTIONAL,
     -- Key elements follow:
  recordSyntax        [1] IMPLICIT OBJECT IDENTIFIER,
     -- Non-key brief elements follow:
  name                [2] IMPLICIT [335]InternationalString,
     -- non-brief elements follow:
  transferSyntaxes    [3] IMPLICIT SEQUENCE OF OBJECT IDENTIFIER OPTIONAL,
  description         [4] IMPLICIT [336]HumanString OPTIONAL,
  asn1Module          [5] IMPLICIT [337]InternationalString
OPTIONAL,
  abstractStructure   [6] IMPLICIT SEQUENCE OF [338]ElementInfo
OPTIONAL
                             -- Omitting abstractStructure only means target
                             -- isn't using Explain to describe the structure,
                             -- not that there is no structure.
                    }



AttributeSetInfo ::= SEQUENCE {
  commonInfo    [0] IMPLICIT [339]CommonInfo OPTIONAL,
     -- Key elements follow:
  attributeSet  [1] IMPLICIT [340]AttributeSetId,
     -- non-key brief elements follow:
  name          [2] IMPLICIT [341]InternationalString,
     -- non-brief elements follow:
  attributes    [3] IMPLICIT SEQUENCE OF [342]AttributeType
OPTIONAL,
                        -- mandatory in full record
  description   [4] IMPLICIT [343]HumanString OPTIONAL}



-- AttributeType referenced in AttributeSetInfo
   AttributeType ::= SEQUENCE {
         name             [0] IMPLICIT [344]InternationalString
OPTIONAL,
         description      [1] IMPLICIT [345]HumanString OPTIONAL,
         attributeType    [2] IMPLICIT INTEGER,
         attributeValues  [3] IMPLICIT SEQUENCE OF [346]AttributeDescription}

   AttributeDescription ::= SEQUENCE {
         name                   [0] IMPLICIT [347]InternationalString
OPTIONAL,
         description            [1] IMPLICIT [348]HumanString
OPTIONAL,
         attributeValue         [2] [349]StringOrNumeric,
         equivalentAttributes   [3] IMPLICIT SEQUENCE OF [350]StringOrNumeric
                                                 OPTIONAL
                                       -- each is an occurence of
                                       -- 'attributeValue' from
                                       --AttributeDescription for a
                                       -- different attribute. Equivalences
                                       -- listed here should be derived from th
e
                                       -- attribute set definition, not from a
                                       -- particular server's behavior.
                              }


TermListInfo ::= SEQUENCE{
  commonInfo    [0]   IMPLICIT [351]CommonInfo OPTIONAL,
     -- Key elements follow:
  databaseName  [1]   IMPLICIT [352]DatabaseName,
     -- Non-key brief elements follow:
  termLists     [2] IMPLICIT SEQUENCE OF SEQUENCE{
                      name         [1] IMPLICIT [353]InternationalString,
                      title        [2] IMPLICIT [354]HumanString OPTIONAL,
                                          -- Title is for users to see
                                          -- and can differ by language.
                                          -- Name, on the other hand, is
                                          -- typically a short string
                                          -- not necessarily meant to be
                                          -- human-readable, and not
                                          -- variable by language.
                      searchCost   [3] IMPLICIT INTEGER {
                                          optimized    (0),
                                             -- The attribute (or combination)
                                             -- associated with this list will
                                             -- do fast searches.
                                          normal       (1),
                                             -- The attribute (combination) wil
l
                                             -- work expected. So there's
                                             -- probably an index for the
                                             -- attribute (combination) or some
                                             -- similar mechanism.
                                          expensive    (2),
                                             -- Can use the attribute
                                             -- (combination), but it might not
                                             -- provide satisfactory results.
                                             -- Probably there is no index, or
                                             -- post-processing of records is
                                             -- required.
                                          filter       (3)
                                             -- can't search with this
                                             -- attribute (combination) alone.
                                                    } OPTIONAL,
                    scanable       [4] IMPLICIT BOOLEAN,
                                          -- 'true' means this list can be
                                          -- scanned.
                     broader       [5] IMPLICIT SEQUENCE OF [355]InternationalS
tring
                                                     OPTIONAL,
                     narrower      [6] IMPLICIT SEQUENCE OF [356]InternationalS
tring
                                                     OPTIONAL
                                          -- broader and narrower list
                                          -- alternative term lists related to
                                          -- this one. The term lists so listed
                                          -- should also be in this termLists
                                          -- structure.
                                       }
   -- no non-brief elements
                  }




ExtendedServicesInfo ::= SEQUENCE {
  commonInfo          [0]    IMPLICIT [357]CommonInfo OPTIONAL,
     -- Key elements follow:
  type                [1]    IMPLICIT OBJECT IDENTIFIER,
     -- Non-key brief elements follow:
  name                [2]    IMPLICIT [358]InternationalString
OPTIONAL,
                             -- should be supplied if privateType is 'true'
  privateType         [3]    IMPLICIT BOOLEAN,
  restrictionsApply   [5]    IMPLICIT BOOLEAN,  -- if 'true' see 'description'
  feeApply            [6]    IMPLICIT BOOLEAN,  -- if 'true' see 'description'
  available           [7]    IMPLICIT BOOLEAN,
  retentionSupported  [8]    IMPLICIT BOOLEAN,
  waitAction          [9]    IMPLICIT INTEGER{
                                waitSupported       (1),
                                waitAlways          (2),
                                waitNotSupported    (3),
                                depends             (4),
                                notSaying           (5)},
      -- non-brief elements follow:
      -- To get brief plus 'description' use esn 'description'
  description         [10]   IMPLICIT [359]HumanString OPTIONAL,
      -- to get above elements and 'specificExplain' use esn
      --'specificExplain'
  specificExplain     [11]   IMPLICIT EXTERNAL OPTIONAL,
                                -- Use oid of specific ES, and select choice
                                -- [3] 'explain'. Format to be developed in
                                -- conjunction with the specific ES definition.
      -- to get all elements except 'specificExplain', use esn 'asn'
  esASN               [12]   IMPLICIT[360]InternationalString
OPTIONAL
                                -- the ASN.1 for this ES
                        }

-- - - - - - - - - - - - - Detail records
 -- The detail records describe relationships among entities supported by the
 -- target. RetrievalRecordDetails describes the way that schema elements are
 -- mapped into record elements. This mapping may be different for each
 -- combination of database, schema, record syntax. The per-element details
 -- describe the default mapping. Origin-request re-tagging can change that
 -- mapping. When multiple databases are listed in a databaseNames element,
 -- the record applies equally to all of the listed databases.  This is
 -- unrelated to searching the databases together. AttributeDetails describes
 -- how databases can be searched. Each supported attribute is listed, and
 -- the allowable combinations can be described.

AttributeDetails ::= SEQUENCE {
  commonInfo              [0] IMPLICIT [361]CommonInfo OPTIONAL,
     -- Key elements follow:
  databaseName            [1] IMPLICIT [362]DatabaseName,
     -- Non-brief elements follow:
  attributesBySet         [2] IMPLICIT SEQUENCE OF [363]AttributeSetDetails
                                    OPTIONAL,
                                -- mandatory in full record
  attributeCombinations   [3] IMPLICIT [364]AttributeCombinations OPTIONAL}


-- AttributeSetDetails referenced by AttributeDetails
   AttributeSetDetails ::= SEQUENCE {
         attributeSet        [0] IMPLICIT [365]AttributeSetId,
         attributesByType    [1] IMPLICIT SEQUENCE OF [366]AttributeTypeDetails
}


   AttributeTypeDetails ::= SEQUENCE {
      attributeType       [0] IMPLICIT INTEGER,
      defaultIfOmitted    [1] IMPLICIT [367]OmittedAttributeInterpretation OPTI
ONAL,
      attributeValues     [2] IMPLICIT SEQUENCE OF [368]AttributeValue OPTIONAL
 }
                                -- If no attributeValues are supplied, all
                                -- values of this type are fully supported, and
                                -- the descriptions in AttributeSetInfo are
                                -- adequate.


   OmittedAttributeInterpretation ::=
SEQUENCE {
      defaultValue           [0] [369]StringOrNumeric OPTIONAL,
                                   -- A default value is listed if that's how
                                   -- the server works
      defaultDescription     [1] IMPLICIT [370]HumanString
OPTIONAL }
                                   -- The human-readable description should
                                   -- generally be provided. It is legal for
                                   -- both default elements to be missing,
                                   -- which means that the target will allow
                                   -- the attribute type to be omitted, but
                                   -- isn't saying what it will do.

AttributeValue ::= SEQUENCE {
  value            [0] [371]StringOrNumeric,
  description      [1] IMPLICIT [372]HumanString OPTIONAL,
  subAttributes    [2] IMPLICIT SEQUENCE OF [373]StringOrNumeric OPTIONAL,
  superAttributes  [3] IMPLICIT SEQUENCE OF [374]StringOrNumeric OPTIONAL,
  partialSupport   [4] IMPLICIT NULL OPTIONAL
                          -- partialSupport indicates that an attributeValue is
                          -- accepted, but may not be processed in the
                          -- "expected" way. One important reason for this is
                          -- composite databases: in this case partialSupport
                          -- may indicate that only some of the subDbs support
                          -- the attribute, and others ignore it.
                      }


TermListDetails ::= SEQUENCE{  -- one for each termList in
TermListInfo
  commonInfo       [0] IMPLICIT [375]CommonInfo OPTIONAL,
     -- Key elements follow:
  termListName     [1] IMPLICIT [376]InternationalString,
     -- Non-key elements (all non-brief) follow:
  description      [2] IMPLICIT [377]HumanString OPTIONAL,
  attributes       [3] IMPLICIT [378]AttributeCombinations
OPTIONAL,
                          -- Pattern for attributes that hit this list.
                          -- Mandatory in full record
  scanInfo         [4] IMPLICIT SEQUENCE {
                          maxStepSize        [0] IMPLICIT INTEGER OPTIONAL,
                          collatingSequence  [1] IMPLICIT [379]HumanString
OPTIONAL,
                          increasing         [2] IMPLICIT BOOLEAN OPTIONAL}
                                                        OPTIONAL,
                            -- Occurs only if list is scanable.
                            -- If list is scanable and if scanInfo is omitted,
                            -- target doesn't consider these important.
  estNumberTerms   [5] IMPLICIT INTEGER OPTIONAL,
  sampleTerms      [6] IMPLICIT SEQUENCE OF [380]Term OPTIONAL}



ElementSetDetails ::= SEQUENCE {
   -- ElementSetDetails describes the way that database records are mapped to
   -- record elements. This mapping may be different for each combination of
   -- database name and element set. The database record description is a
   -- schema, which may be private to the target. The schema's abstract
   -- record structure and tag sets provide the vocabulary for discussing
   -- record content; their presence in the Explain database does not imply
   -- support for complex retrieval specification.
  commonInfo          [0]   IMPLICIT [381]CommonInfo OPTIONAL,
     -- Key elements follow:
  databaseName        [1] IMPLICIT [382]DatabaseName,
  elementSetName      [2] IMPLICIT [383]ElementSetName,
  recordSyntax        [3] IMPLICIT OBJECT IDENTIFIER,
     -- Non-key Brief elements follow:
  schema              [4] IMPLICIT OBJECT IDENTIFIER,
     -- Non-brief elements follow:
  description         [5] IMPLICIT [384]HumanString OPTIONAL,
  detailsPerElement   [6] IMPLICIT SEQUENCE OF [385]PerElementDetails OPTIONAL
                             -- mandatory in full record
                     }



RetrievalRecordDetails ::= SEQUENCE {
  commonInfo          [0] IMPLICIT [386]CommonInfo OPTIONAL,
     -- Key elements follow:
  databaseName        [1] IMPLICIT [387]DatabaseName,
  schema              [2] IMPLICIT OBJECT IDENTIFIER,
  recordSyntax        [3] IMPLICIT OBJECT IDENTIFIER,
     -- Non-brief elements follow:
  description         [4] IMPLICIT [388]HumanString OPTIONAL,
  detailsPerElement   [5] IMPLICIT SEQUENCE OF [389]PerElementDetails OPTIONAL
                             -- mandatory in full record
                  }



-- PerElementDetails is referenced in RetreivalRecordDetails and
-- ElementSetDetails.
    PerElementDetails ::= SEQUENCE {
        name              [0]   IMPLICIT [390]InternationalString
OPTIONAL,
                                   -- If the name is omitted, the record
                                   -- syntax's name for this element is
                                   -- appropriate.
        recordTag         [1]   IMPLICIT [391]RecordTag OPTIONAL,
                                   -- The record tag may be omitted if tags are
                                   -- inappropriate for the syntax, or if the
                                   -- origin can be expected to know it for
                                   -- some other reason.
        schemaTags        [2]   IMPLICIT SEQUENCE OF [392]Path OPTIONAL,
                                   -- The information from the listed schema
                                   -- elements is in some way to produce the
                                   -- data sent in the listed record tag. The
                                   -- 'contents' element below may describe the
                                   -- the logic used.
        maxSize           [3]   IMPLICIT INTEGER OPTIONAL,
        minSize           [4]   IMPLICIT INTEGER OPTIONAL,
        avgSize           [5]   IMPLICIT INTEGER OPTIONAL,
        fixedSize         [6]   IMPLICIT INTEGER OPTIONAL,
        repeatable        [8]   IMPLICIT BOOLEAN,
        required          [9]   IMPLICIT BOOLEAN,
                                   -- 'required' really means that target will
                                   -- always supply the element.
        description       [12]  IMPLICIT [393]HumanString OPTIONAL,
        contents          [13]  IMPLICIT [394]HumanString OPTIONAL,
        billingInfo       [14]  IMPLICIT [395]HumanString OPTIONAL,
        restrictions      [15]  IMPLICIT [396]HumanString OPTIONAL,
        alternateNames    [16]  IMPLICIT SEQUENCE OF [397]InternationalString
                                    OPTIONAL,
        genericNames      [17]  IMPLICIT SEQUENCE OF [398]InternationalString
                                    OPTIONAL,
        searchAccess      [18]  IMPLICIT [399]AttributeCombinations OPTIONAL}

         -- RecordTag referenced in PerElementDetails above
            RecordTag ::= SEQUENCE {
                   qualifier    [0] [400]StringOrNumeric OPTIONAL,
                                       -- E.g. tag set for GRS-1
                   tagValue     [1] [401]StringOrNumeric}




SortDetails ::= SEQUENCE {
  commonInfo       [0] IMPLICIT [402]CommonInfo OPTIONAL,
   -- Key elements follow:
  databaseName     [1] IMPLICIT [403]DatabaseName,
     -- No non-key brief elements
     -- Non-brief elements follow:
  sortKeys         [2] IMPLICIT SEQUENCE OF [404]SortKeyDetails
OPTIONAL
                           -- mandatory in full record
               }

   SortKeyDetails ::= SEQUENCE {
        description                [0] IMPLICIT [405]HumanString
OPTIONAL,
        elementSpecifications      [1] IMPLICIT SEQUENCE OF [406]Specification
                                                 OPTIONAL,
                                          -- each specification is a way of
                                          -- specifying this same sort key
        attributeSpecifications    [2] IMPLICIT [407]AttributeCombinations OPTI
ONAL,
                                          -- each combination is a way of
                                          -- specifying this same sort key
        sortType                   [3] CHOICE {
                                          character    [0]   IMPLICIT NULL,
                                          numeric      [1]   IMPLICIT NULL,
                                          structured   [2]   IMPLICIT
                                                           [408]HumanString} OP
TIONAL,
        caseSensitivity            [4] IMPLICIT INTEGER {
                                          always       (0),
                                             -- always case-sensitive
                                          never        (1),
                                             -- never case-sensitive
                                          default-yes  (2),
                                             -- case-sensitivity is as specifie
d
                                             -- on request, and if not
                                             -- specified, case-sensitive.
                                          default-no   (3)
                                             -- case-sensitivity is as specifie
d
                                             -- on request, and if not
                                             -- specified, not case-sensitive.
                                                          }
                                          OPTIONAL}



ProcessingInformation ::= SEQUENCE{
  commonInfo          [0]   IMPLICIT [409]CommonInfo OPTIONAL,
     -- Key elements follow:
  databaseName        [1] IMPLICIT [410]DatabaseName,
  processingContext   [2] IMPLICIT INTEGER {
                                access                 (0),
                                   -- e.g. choosing databases
                                search                 (1),
                                   -- e.g. "search strategies" or search forms
                                retrieval              (2),
                                   -- e.g. recommended element combinations
                                record-presentation    (3),
                                   -- display of retrieved records
                                record-handling        (4)
                                   -- handling (e.g. saving) of retrieved
                                   -- records
                                                },
  name                [3] IMPLICIT [411]InternationalString,
  oid                 [4] IMPLICIT OBJECT IDENTIFIER,
                             -- So origin can retreive brief record and
                             -- determine if it can handle 'instructions' when
                             -- retrieving the full record.
     -- No non-key brief elements
     -- Non-brief elements follow:
  description         [5] IMPLICIT [412]HumanString OPTIONAL,
                            -- use element set name 'description'
                            -- to retrieve all except instructions.
  instructions        [6] IMPLICIT EXTERNAL OPTIONAL -- mandatory in full recor
d
                            }




VariantSetInfo ::= SEQUENCE {
      -- A record in this category describes a variant set definition, i.e.,
      -- classes, types, and values, for a specific variant set definition
      -- supported by the target. Support by the target of a particular
      -- variant set definition does not imply that the definition is
      -- supported for any specific database or element.
  commonInfo    [0] IMPLICIT [413]CommonInfo OPTIONAL,
   -- Key elements follow:
  variantSet    [1] IMPLICIT OBJECT IDENTIFIER,
   -- Non-key brief elements follow:
  name          [2] IMPLICIT [414]InternationalString,
   -- Non-brief elements follow:
  variants      [3] IMPLICIT SEQUENCE OF [415]VariantClass
OPTIONAL
                      -- mandatory in full record
                }

   -- Subsidiary structures for VariantSetInfo
      VariantClass ::= SEQUENCE {
             name            [0] IMPLICIT [416]InternationalString
OPTIONAL,
             description     [1] IMPLICIT [417]HumanString OPTIONAL,
             variantClass    [2] IMPLICIT INTEGER,
             variantTypes    [3] IMPLICIT SEQUENCE OF [418]VariantType}

      VariantType ::= SEQUENCE {
             name            [0] IMPLICIT [419]InternationalString
OPTIONAL,
             description     [1] IMPLICIT [420]HumanString OPTIONAL,
             variantType     [2] IMPLICIT INTEGER,
             variantValue    [3] IMPLICIT [421]VariantValue OPTIONAL}

      VariantValue ::= SEQUENCE {
             dataType        [0] [422]PrimitiveDataType,
             values          [1] [423]ValueSet OPTIONAL }

      ValueSet ::= CHOICE {
             range           [0] IMPLICIT [424]ValueRange,
             enumerated      [1] IMPLICIT SEQUENCE OF [425]ValueDescription }

      ValueRange ::= SEQUENCE {
                          -- At last one the following must be supplied, both
                          -- may be supplied.
             lower           [0] [426]ValueDescription OPTIONAL,
             upper           [1] [427]ValueDescription OPTIONAL }

      ValueDescription ::= CHOICE{
             integer               INTEGER,
             string                [428]InternationalString,
             octets                OCTET STRING,
             oid                   OBJECT IDENTIFIER,
             unit            [1]   IMPLICIT [429]Unit,
             valueAndUnit    [2]   IMPLICIT [430]IntUnit
                -- oid and unit can't be used in a ValueRange
                  }



UnitInfo ::= SEQUENCE {
  commonInfo    [0] IMPLICIT [431]CommonInfo OPTIONAL,
   -- Key elements follow:
  unitSystem    [1] IMPLICIT [432]InternationalString,
    -- No non-key brief elements
    -- Non-brief elements follow:
  description   [2] IMPLICIT [433]HumanString OPTIONAL,
  units         [3] IMPLICIT SEQUENCE OF [434]UnitType OPTIONAL }
                            -- mandatory in full record

   -- Subsidiary structures for UnitInfo
      UnitType ::= SEQUENCE {
         name         [0] IMPLICIT [435]InternationalString
OPTIONAL,
         description  [1] IMPLICIT [436]HumanString OPTIONAL,
         unitType     [2] [437]StringOrNumeric,
         units        [3] IMPLICIT SEQUENCE OF [438]Units}

      Units ::= SEQUENCE {
         name         [0] IMPLICIT [439]InternationalString
OPTIONAL,
         description  [1] IMPLICIT [440]HumanString OPTIONAL,
         unit         [2] [441]StringOrNumeric}



CategoryList ::= SEQUENCE {
  commonInfo    [0] IMPLICIT [442]CommonInfo OPTIONAL,
         -- Only one record expected per Explain database. All elements
         -- appear in brief presentation.
  categories    [1] IMPLICIT SEQUENCE OF [443]CategoryInfo }

      CategoryInfo ::= SEQUENCE {
         category            [1] IMPLICIT [444]InternationalString,
         originalCategory    [2] IMPLICIT [445]InternationalString
OPTIONAL,
             description     [3] IMPLICIT [446]HumanString OPTIONAL,
           asn1Module        [4] IMPLICIT [447]InternationalString
OPTIONAL}




-- - - - - - - - - - - - - - Subsidiary definitions

CommonInfo ::= SEQUENCE {
  dateAdded               [0]   IMPLICIT GeneralizedTime OPTIONAL,
  dateChanged             [1]   IMPLICIT GeneralizedTime OPTIONAL,
  expiry                  [2]   IMPLICIT GeneralizedTime OPTIONAL,
  humanString-Language    [3]   IMPLICIT [448]LanguageCode
OPTIONAL,
   -- following not to occur for brief:
  otherInfo                     [449]OtherInformation OPTIONAL}

HumanString ::= SEQUENCE OF SEQUENCE {
             language     [0] IMPLICIT [450]LanguageCode OPTIONAL,
             text         [1] IMPLICIT [451]InternationalString}

IconObject ::= SEQUENCE OF SEQUENCE{
         -- Note that the "SEQUENCE OF" is to allow alternative
         -- representations of the same Icon; it is not intended to allow
         -- multiple icons.
   bodyType  [1] CHOICE{
                   ianaType     [1] IMPLICIT [452]InternationalString,
                   z3950type    [2] IMPLICIT [453]InternationalString,
                   otherType    [3] IMPLICIT [454]InternationalString},
   content   [2] IMPLICIT OCTET STRING}


LanguageCode ::=[455]InternationalString
                           -- from ANSI/NISO Z39.53-1994

ContactInfo ::= SEQUENCE {
  name          [0] IMPLICIT [456]InternationalString OPTIONAL,
  description   [1] IMPLICIT [457]HumanString OPTIONAL,
  address       [2] IMPLICIT [458]HumanString OPTIONAL,
  email         [3] IMPLICIT [459]InternationalString OPTIONAL,
  phone         [4] IMPLICIT [460]InternationalString
OPTIONAL}

NetworkAddress ::= CHOICE {
  internetAddress            [0] IMPLICIT SEQUENCE {
                                   hostAddress  [0] IMPLICIT
                                                    [461]InternationalString,
                                   port         [1] IMPLICIT INTEGER},
  osiPresentationAddress     [1] IMPLICIT SEQUENCE {
                                   pSel      [0] IMPLICIT [462]InternationalStr
ing,
                                   sSel      [1] IMPLICIT[463]InternationalStri
ng
                                                        OPTIONAL,
                                   tSel      [2] IMPLICIT[464]InternationalStri
ng
                                                        OPTIONAL,
                                   nSap      [3] IMPLICIT [465]InternationalStr
ing},
  other                      [2] IMPLICIT SEQUENCE {
                                   type      [0] IMPLICIT [466]InternationalStr
ing,
                                   address   [1] IMPLICIT [467]InternationalStr
ing}}


AccessInfo ::= SEQUENCE {
      -- AccessInfo contains the fundmental information about what facilites
      -- are required to use this target or server. For example, if an origin
      -- can handle none of the record syntaxes a database can provide,
      -- it might choose not to access the database.
  queryTypesSupported     [0] IMPLICIT SEQUENCE OF [468]QueryTypeDetails OPTION
AL,
  diagnosticsSets         [1] IMPLICIT SEQUENCE OF OBJECT IDENTIFIER OPTIONAL,
  attributeSetIds         [2] IMPLICIT SEQUENCE OF [469]AttributeSetId OPTIONAL
,
  schemas                 [3] IMPLICIT SEQUENCE OF OBJECT IDENTIFIER OPTIONAL,
  recordSyntaxes          [4] IMPLICIT SEQUENCE OF OBJECT IDENTIFIER OPTIONAL,
  resourceChallenges      [5] IMPLICIT SEQUENCE OF OBJECT IDENTIFIER OPTIONAL,
  restrictedAccess        [6] IMPLICIT [470]AccessRestrictions
OPTIONAL,
  costInfo                [8] IMPLICIT [471]Costs OPTIONAL,
  variantSets             [9] IMPLICIT SEQUENCE OF OBJECT IDENTIFIER OPTIONAL,
  elementSetNames         [10] IMPLICIT SEQUENCE OF [472]ElementSetName OPTIONA
L,
  unitSystems             [11] IMPLICIT SEQUENCE OF [473]InternationalString}


-- begin auxiliary definitions for AccessInfo
-- Begin Query Details
QueryTypeDetails ::= CHOICE {
  private       [0]     IMPLICIT [474]PrivateCapabilities,
  rpn           [1]     IMPLICIT [475]RpnCapabilities,
  iso8777       [2]     IMPLICIT [476]Iso8777Capabilities,
  z39-58        [100]   IMPLICIT [477]HumanString,
  erpn          [101]   IMPLICIT [478]RpnCapabilities,
  rankedList    [102]   IMPLICIT [479]HumanString}


PrivateCapabilities ::= SEQUENCE {
  operators     [0] IMPLICIT SEQUENCE OF SEQUENCE {
                      operator     [0] IMPLICIT [480]InternationalString,
                      description  [1] IMPLICIT [481]HumanString
OPTIONAL } OPTIONAL,
  searchKeys    [1] IMPLICIT SEQUENCE OF [482]SearchKey
OPTIONAL,
                          -- field names that can be searched
  description   [2] IMPLICIT SEQUENCE OF [483]HumanString
OPTIONAL }


RpnCapabilities ::= SEQUENCE {
  operators                     [0] IMPLICIT SEQUENCE OF INTEGER OPTIONAL,
                                -- Omitted means all operators are supported.
  resultSetAsOperandSupported   [1] IMPLICIT BOOLEAN,
  restrictionOperandSupported   [2] IMPLICIT BOOLEAN,
  proximity                     [3] IMPLICIT [484]ProximitySupport
OPTIONAL}

Iso8777Capabilities ::= SEQUENCE {
  searchKeys    [0] IMPLICIT SEQUENCE OF [485]SearchKey,
                      -- field names that may be searched
  restrictions  [1] IMPLICIT [486]HumanString OPTIONAL
                      -- Omitted means supported, not specifying units.
                     }

ProximitySupport ::= SEQUENCE {
  anySupport       [0] IMPLICIT BOOLEAN,
                          -- 'false' means no proximity support, in which case
                          -- unitsSupported not supplied.
  unitsSupported   [1] IMPLICIT SEQUENCE OF CHOICE{
                          known    [1] IMPLICIT INTEGER,
                                -- values from KnownProximityUnit
                          private  [2] IMPLICIT SEQUENCE{
                                          unit         [0] IMPLICIT INTEGER,
                                          description  [1] [487]HumanString
OPTIONAL}}
                                              OPTIONAL}

SearchKey ::= SEQUENCE {
  searchKey     [0] IMPLICIT [488]InternationalString,
  description   [1] IMPLICIT [489]HumanString OPTIONAL }
-- End Query details



AccessRestrictions ::= SEQUENCE OF SEQUENCE {
  accessType          [0] INTEGER {
                          any                (0),
                          search             (1),
                          present            (2),
                          specific-elements  (3),
                          extended-services  (4),
                          by-database        (5)},
  accessText          [1]  IMPLICIT [490]HumanString OPTIONAL,
  accessChallenges    [2]  IMPLICIT SEQUENCE OF OBJECT IDENTIFIER OPTIONAL}


Costs ::= SEQUENCE {
  connectCharge    [0] IMPLICIT [491]Charge OPTIONAL,     --
Per-connection charge
  connectTime      [1] IMPLICIT [492]Charge OPTIONAL,     -- Time-based
charge
  displayCharge    [2] IMPLICIT [493]Charge OPTIONAL,     -- Per-record
charge
  searchCharge     [3] IMPLICIT [494]Charge OPTIONAL,     -- Per-search
charge
  subscriptCharge  [4]   IMPLICIT [495]Charge OPTIONAL,   --
Subscription charges
  otherCharges     [5] IMPLICIT SEQUENCE OF SEQUENCE{   -- Other charges
                          forWhat  [1] IMPLICIT [496]HumanString,
                          charge   [2] IMPLICIT [497]Charge} OPTIONAL}

      Charge ::= SEQUENCE{
           cost       [1] IMPLICIT [498]IntUnit,
           perWhat    [2] IMPLICIT [499]Unit OPTIONAL,
                             -- e.g. "second," "minute," "line," "record"...
           text       [3] IMPLICIT [500]HumanString OPTIONAL}
-- End Auxiliary definitions for AccessInfo


DatabaseList ::= SEQUENCE OF [501]DatabaseName

AttributeCombinations ::= SEQUENCE {
  defaultAttributeSet     [0] IMPLICIT [502]AttributeSetId,
                                -- Default for the combinations. Also probably
                                -- a good choice for the default
                                -- in searches, but that isn't required.
  legalCombinations       [1] IMPLICIT SEQUENCE OF [503]AttributeCombination }


AttributeCombination ::= SEQUENCE OF [504]AttributeOccurrence
  -- An AttributeCombination is a pattern for legal combination of attributes


AttributeOccurrence ::= SEQUENCE {
                -- An AttributeOccurrence lists the legal values for a
                -- specific attribute type in a combination.
   attributeSet       [0] IMPLICIT [505]AttributeSetId OPTIONAL,
   attributeType      [1] IMPLICIT INTEGER,
   mustBeSupplied     [2] IMPLICIT NULL OPTIONAL,
   attributeValues    CHOICE {
                          any-or-none   [3] IMPLICIT NULL,
                             -- All supported values are OK
                          specific      [4] IMPLICIT SEQUENCE OF
                                              [506]StringOrNumeric}}
                            -- Only these values allowed


END





RecordSyntax-SUTRS
{Z39-50-recordSyntax SUTRS (101)} DEFINITIONS ::=
BEGIN
IMPORTS [507]InternationalString  FROM Z39-50-APDU-1995;
        SutrsRecord ::= [508]InternationalString
-- Line terminator is ASCII LF (X'0A').
-- Recommended maximum line length is 72 characters.
END





RecordSyntax-opac
{Z39-50-recordSyntax opac (102)} DEFINITIONS ::=
BEGIN
IMPORTS [509]InternationalString  FROM Z39-50-APDU-1995;

OPACRecord ::= SEQUENCE {
   bibliographicRecord    [1] IMPLICIT EXTERNAL OPTIONAL,
   holdingsData           [2] IMPLICIT SEQUENCE OF [510]HoldingsRecord OPTIONAL
}

HoldingsRecord ::=  CHOICE {
   marcHoldingsRecord     [1] IMPLICIT EXTERNAL,
   holdingsAndCirc        [2] IMPLICIT [511]HoldingsAndCircData}

HoldingsAndCircData ::=  SEQUENCE {
                             -- the following elements are required to display
                             -- holdings in conformance with NISO standards.
   typeOfRecord       [1]    IMPLICIT [512]InternationalString
OPTIONAL,-- LDR 06
   encodingLevel      [2]    IMPLICIT [513]InternationalString
OPTIONAL, -- LDR 017
   format             [3]    IMPLICIT [514]InternationalString
OPTIONAL, -- 007
                                                                           -- 0
0-01
   receiptAcqStatus   [4]    IMPLICIT [515]InternationalString
OPTIONAL, -- 008 06
   generalRetention   [5]    IMPLICIT [516]InternationalString
OPTIONAL, -- 008 12
   completeness       [6]    IMPLICIT [517]InternationalString
OPTIONAL, -- 008 16
   dateOfReport       [7]    IMPLICIT [518]InternationalString
OPTIONAL, -- 008
                                                                           -- 2
6-31
   nucCode            [8]    IMPLICIT [519]InternationalString
OPTIONAL, -- 852 $a
   localLocation      [9]    IMPLICIT [520]InternationalString
OPTIONAL, -- 852 $b
   shelvingLocation   [10]   IMPLICIT [521]InternationalString
OPTIONAL, -- 852 $c
   callNumber         [11]   IMPLICIT [522]InternationalString
OPTIONAL, -- 852 $h
                                                                       -- and $
i
   shelvingData       [12]   IMPLICIT [523]InternationalString
OPTIONAL, -- 852 $j
                                                                       -- thru
$m
   copyNumber         [13]   IMPLICIT [524]InternationalString
OPTIONAL, -- 852 $t
   publicNote         [14]   IMPLICIT [525]InternationalString
OPTIONAL, -- 852 $z
   reproductionNote   [15]   IMPLICIT [526]InternationalString
OPTIONAL, -- 843
   termsUseRepro      [16]   IMPLICIT [527]InternationalString
OPTIONAL, -- 845
   enumAndChron       [17]   IMPLICIT [528]InternationalString
OPTIONAL, -- all 85x,
                                                                           --
86x
   volumes            [18]   IMPLICIT SEQUENCE OF [529]Volume
OPTIONAL,
                                -- repeats for each volume held
   circulationData    [19]   IMPLICIT SEQUENCE OF [530]CircRecord
OPTIONAL
                                -- repeats for each circulating item.
                  }

Volume ::=  SEQUENCE {
   enumeration        [1]    IMPLICIT [531]InternationalString
OPTIONAL,
   chronology         [2]    IMPLICIT [532]InternationalString
OPTIONAL,
   enumAndChron       [3]    IMPLICIT [533]InternationalString
OPTIONAL }

CircRecord ::=  SEQUENCE {
   availableNow       [1]    IMPLICIT BOOLEAN,
   availablityDate    [2]    IMPLICIT [534]InternationalString
OPTIONAL,
   availableThru      [3]    IMPLICIT [535]InternationalString
OPTIONAL,
   restrictions       [4]    IMPLICIT [536]InternationalString
OPTIONAL,
   itemId             [5]    IMPLICIT [537]InternationalString
OPTIONAL,
   renewable          [6]    IMPLICIT BOOLEAN,
   onHold             [7]    IMPLICIT BOOLEAN,
   enumAndChron       [8]    IMPLICIT [538]InternationalString
OPTIONAL,
   midspine           [9]    IMPLICIT [539]InternationalString
OPTIONAL,
   temporaryLocation  [10]   IMPLICIT [540]InternationalString
OPTIONAL}
END





RecordSyntax-summary

{Z39-50-recordSyntax summary (103)} DEFINITIONS ::=
BEGIN
IMPORTS [541]OtherInformation, [542]InternationalString  FROM Z39-50-APDU-1995;

BriefBib ::= SEQUENCE {
   title                  [1]   IMPLICIT [543]InternationalString,
   author                 [2]   IMPLICIT [544]InternationalString
OPTIONAL,
   callNumber             [3]   IMPLICIT [545]InternationalString
OPTIONAL,
   recordType             [4]   IMPLICIT [546]InternationalString
OPTIONAL,
   bibliographicLevel     [5]   IMPLICIT [547]InternationalString
OPTIONAL,
   format                 [6]   IMPLICIT SEQUENCE OF [548]FormatSpec
OPTIONAL,
   publicationPlace       [7]   IMPLICIT [549]InternationalString
OPTIONAL,
   publicationDate        [8]   IMPLICIT [550]InternationalString
OPTIONAL,
   targetSystemKey        [9]   IMPLICIT [551]InternationalString
OPTIONAL,
   satisfyingElement      [10]  IMPLICIT [552]InternationalString
OPTIONAL,
   rank                   [11]  IMPLICIT INTEGER OPTIONAL,
   documentId             [12]  IMPLICIT [553]InternationalString
OPTIONAL,
   abstract               [13]  IMPLICIT [554]InternationalString
OPTIONAL,
   otherInfo                    [555]OtherInformation OPTIONAL}

         FormatSpec  ::=  SEQUENCE {
             type     [1] IMPLICIT [556]InternationalString,
             size     [2] IMPLICIT INTEGER OPTIONAL,
             bestPosn [3] IMPLICIT INTEGER OPTIONAL}
END





RecordSyntax-generic  -- For detailed semantics, see
Appendix RET.
{Z39-50-recordSyntax GRS-1 (105)} DEFINITIONS ::=
BEGIN
EXPORTS [557]Variant;
IMPORTS [558]IntUnit, [559]Unit, [560]InternationalString, [561]StringOrNumeric
, [562]Term
FROM Z39-50-APDU-1995;

GenericRecord ::= SEQUENCE OF [563]TaggedElement
TaggedElement ::= SEQUENCE {
   tagType         [1] IMPLICIT INTEGER OPTIONAL,
                          -- If omitted, default should be supplied dynamically
                          -- by tagSet-M; otherwise it should be statically
                          -- specified by the schema.
   tagValue        [2] [564]StringOrNumeric,
   tagOccurrence   [3] IMPLICIT INTEGER OPTIONAL,
                          -- Occurrence within the database record, and
                          -- relative to the parent. No default; if omitted,
                          -- target not telling or it is irrelevant.
   content         [4] [565]ElementData,
   metaData        [5] IMPLICIT [566]ElementMetaData
OPTIONAL,
   appliedVariant  [6] IMPLICIT [567]Variant OPTIONAL}

ElementData ::= CHOICE{
   octets                    OCTET STRING,
   numeric                   INTEGER,
   date                      GeneralizedTime,
   ext                       EXTERNAL,
   string                    [568]InternationalString,
   trueOrFalse               BOOLEAN,
   oid                       OBJECT IDENTIFIER,
   intUnit            [1]    IMPLICIT [569]IntUnit,
    elementNotThere   [2]    IMPLICIT NULL,  -- element requested but not there
   elementEmpty       [3]    IMPLICIT NULL,  -- element there, but empty
   noDataRequested    [4]    IMPLICIT NULL,  -- variant request said 'no data'
   diagnostic         [5]    IMPLICIT EXTERNAL,
   subtree            [6]    SEQUENCE OF [570]TaggedElement
                                -- recursive, for nested tags
                     }

ElementMetaData ::= SEQUENCE{
   seriesOrder        [1]    IMPLICIT [571]Order OPTIONAL,
                                -- only for a non-leaf node
   usageRight         [2]    IMPLICIT [572]Usage OPTIONAL,
   hits               [3]    IMPLICIT SEQUENCE OF [573]HitVector
OPTIONAL,
   displayName        [4]    IMPLICIT [574]InternationalString
OPTIONAL,
                                -- name for element that origin can use for
                                -- display
   supportedVariants  [5]    IMPLICIT SEQUENCE OF [575]Variant
OPTIONAL,
   message            [6]    IMPLICIT [576]InternationalString
OPTIONAL,
   elementDescriptor  [7]    IMPLICIT OCTET STRING OPTIONAL,
   surrogateFor       [8]    IMPLICIT [577]TagPath OPTIONAL,
                                -- the retrieved element is a surrogate for the
                                -- element given by this path
   surrogateElement   [9]    IMPLICIT [578]TagPath OPTIONAL,
                                -- the element given by this path is a
                                -- surrogate for the retrieved element
     other            [99]   IMPLICIT EXTERNAL OPTIONAL}

            TagPath ::= SEQUENCE  OF SEQUENCE{
                tagType         [1] IMPLICIT INTEGER OPTIONAL,
                tagValue        [2] [579]StringOrNumeric,
                tagOccurrence   [3] IMPLICIT INTEGER OPTIONAL}


Order ::= SEQUENCE{
   ascending      [1] IMPLICIT BOOLEAN,
                          -- "true" means monotonically increasing (i.e. non-
                          --  decreasing); "false" means monotonically
                          -- decreasing (i.e. non-increasing).
   order         [2] IMPLICIT INTEGER
                          -- Same as defined by 'elementOrdering' in tagSet-M,
                          -- though this may be overidden by schema.
               }

Usage ::= SEQUENCE   {
   type            [1] IMPLICIT INTEGER{
                          redistributable    (1),
                             -- Element is freely redistributable.
                          restricted         (2),
                             -- Restriction contains statement.
                          licensePointer     (3)
                             -- Restriction contains license pointer.
                          },
   restriction     [2] IMPLICIT [580]InternationalString
OPTIONAL}

HitVector ::= SEQUENCE{
                      -- Each hit vector points to a fragment within the
                      -- element, via location and/or token.
   satisfier                 [581]Term OPTIONAL, -- sourceword, etc.
   offsetIntoElement  [1]    IMPLICIT [582]IntUnit OPTIONAL,
   length             [2]    IMPLICIT [583]IntUnit OPTIONAL,
   hitRank            [3]    IMPLICIT INTEGER OPTIONAL,
   targetToken        [4]    IMPLICIT OCTET STRING OPTIONAL
                                -- Origin may use token subsequently within a
                                -- variantRequest (in an elementRequest) to
                                -- retrieve (or to refer to) the fragment.
                     }


Variant ::= SEQUENCE{
     globalVariantSetId   [1] IMPLICIT OBJECT IDENTIFIER OPTIONAL,
                                -- Applies to the triples below, when
                                -- variantSetId omitted. If
                                -- globalVariantSetId omitted, default applies.
                                -- Default may be provided by the tagSet-M
                                -- element defaultVariantSetId.
   triples                [2] IMPLICIT SEQUENCE OF SEQUENCE{
                                variantSetId    [0]   IMPLICIT OBJECT IDENTIFIE
R
                                                        OPTIONAL,
                                                       -- If omitted,
                                                       -- globalVariantSetId
                                                       -- (above) applies, unle
ss
                                                       -- that too is omitted,
in
                                                       -- which case, default
                                                       -- used.
                                class           [1]    IMPLICIT INTEGER,
                                type            [2]    IMPLICIT INTEGER,
                                value           [3]    CHOICE{
                                                          INTEGER,
                                                         [584]InternationalStri
ng,
                                                          OCTET STRING,
                                                          OBJECT IDENTIFIER,
                                                          BOOLEAN,
                                                          NULL,
                                       -- Following need context tags:
                                          unit                [1] IMPLICIT [585
]Unit,
                                          valueAndUnit        [2] IMPLICIT
                                                                     [586]IntUn
it}}}
END





RecordSyntax-ESTaskPackage
{Z39-50-recordSyntax ESTaskPackage (106)} DEFINITIONS ::=
BEGIN
IMPORTS [587]Permissions, [588]InternationalString, [589]IntUnit, [590]DiagRec
FROM Z39-50-APDU-1995;

TaskPackage ::= SEQUENCE{
   packageType               [1]   IMPLICIT OBJECT IDENTIFIER,
                                        -- oid of specific ES definition
   packageName               [2]   IMPLICIT [591]InternationalString
OPTIONAL,
   userId                    [3]   IMPLICIT [592]InternationalString
OPTIONAL,
   retentionTime             [4]   IMPLICIT [593]IntUnit OPTIONAL,
   permissions               [5]   IMPLICIT [594]Permissions OPTIONAL,
   description               [6]   IMPLICIT [595]InternationalString
OPTIONAL,
   targetReference           [7]   IMPLICIT OCTET STRING OPTIONAL,
   creationDateTime          [8]   IMPLICIT GeneralizedTime OPTIONAL,
   taskStatus                [9]   IMPLICIT INTEGER{
                                       pending  (0),
                                       active   (1),
                                       complete (2),
                                       aborted  (3)},
   packageDiagnostics        [10]  IMPLICIT SEQUENCE OF [596]DiagRec
OPTIONAL,
   taskSpecificParameters    [11]  IMPLICIT EXTERNAL
                                       -- Use oid for specific ES definition
                                       -- (same oid as packageType above)
                                       -- and select [2] "taskPackage."
      }
END





ResourceReport-Format-Resource-1
{Z39-50-resourceReport resource-1 (1)} DEFINITIONS ::=
BEGIN
IMPORTS [597]InternationalString FROM Z39-50-APDU-1995;
--
ResourceReport ::= SEQUENCE{
estimates    [1] IMPLICIT SEQUENCE OF [598]Estimate,
message      [2] IMPLICIT[599]InternationalString}
--
Estimate ::= SEQUENCE{
type            [1] IMPLICIT [600]EstimateType,
value           [2] IMPLICIT INTEGER,  -- the actual estimate
currency-code   [3] IMPLICIT INTEGER OPTIONAL
                      -- code for representation of currencies defined in ISO
                      -- 4217-1990.  Applicable only to monetary estimates.
                                             }
EstimateType ::= INTEGER{
currentSearchRecords      (1),  -- estimated no. records in current
                                -- (incomplete) result set for search
finalSearchRecords        (2),  -- estimated no. records that will be in result
                                -- set if search completes
currentPresentRecords     (3),  -- estimated number of records in current
                                -- (incomplete) set of records to be returned
                                -- on Present
finalPresentRecords       (4),  -- estimated number of records that will be in
                                -- the set of records to be returned by Present
                                -- if Present completes
currentOpTimeProcessing   (5),  -- processing time (in .001 CPU seconds) used
                                -- by operation so far
finalOpTimeProcessing     (6),  -- estimated total processing time (in .001 CPU
                                -- seconds) that will be used by this operation
                                -- if it completes
currentAssocTime          (7),  -- estimated processing time used by
                                -- association (in .001 CPU sec.)
currentOperationCost      (8),  -- estimated cost for this operation so far
finalOperationCost        (9),  -- estimated cost for this operation if it
                                -- completes
currentAssocCost          (10), -- estimated cost for this association so far
finalOpTimeElapsed        (11), -- estimated elapsed time for operation if it
                                -- completes (in .001 sec.)
percentComplete           (12), -- estimated percent complete
currentSearchAssocCost    (13), -- estimated search cost for association so far
currentPresentAssocCost   (14), -- estimated present cost for this association
                                -- so far
currentConnectAssocCost   (15), -- estimated connect time cost for association
                                -- so far
currentOtherAssocCost     (16)  -- estimated other cost (not included in 13-15)
                                -- for association so far
                           }
END





ResourceReport-Format-Resource-2
{Z39-50-resourceReport resource-2 (2)} DEFINITIONS ::=
BEGIN
IMPORTS [601]InternationalString, [602]StringOrNumeric, [603]IntUnit FROM
Z39-50-APDU-1995;
--
ResourceReport ::= SEQUENCE{
estimates    [1] IMPLICIT SEQUENCE OF [604]Estimate OPTIONAL,
message      [2] IMPLICIT[605]InternationalString OPTIONAL}
--
Estimate ::= SEQUENCE{
type     [1] [606]StringOrNumeric,
                -- Numeric values of 1-16 are the same as used in Resource-1.
value    [2] IMPLICIT [607]IntUnit
               -- When expressing currency:
               --      unitSystem (of Unit) is 'z3950' (case insensitive)
               --      unitType is 'iso4217-1990' (case insensitive)
               --      unit is currency code from ISO 4217-1990.
}
END





AccessControl prompt-1
{Z39-50-accessControl prompt-1 (1)} DEFINITIONS ::=
BEGIN
IMPORTS [608]InternationalString, [609]DiagRec FROM Z39-50-APDU-1995;
--
PromptObject ::= CHOICE{
   challenge    [1] IMPLICIT [610]Challenge,
   response     [2] IMPLICIT [611]Response}

  Challenge ::= SEQUENCE OF SEQUENCE {
      promptId         [1] [612]PromptId,
                             -- Target supplies a number (for an enumerated
                             -- prompt) or string (for a non-enumerated
                             -- prompt), for each prompt, and the origin
                             -- returns it in response, for this prompt, so
                             -- target may correlate the prompt response with
                             -- the prompt.
   defaultResponse    [2] IMPLICIT [613]InternationalString
OPTIONAL,
   promptInfo         [3] CHOICE{
                              character   [1] IMPLICIT [614]InternationalString
,
                              encrypted   [2] IMPLICIT [615]Encryption}
OPTIONAL,
                                   -- Information corresponding to an
                                   -- emumerated prompt. For example if 'type',
                                   -- within PromptId, is 'copyright', then
                                   -- promptInfo may contain a copyright
                                   -- statement.
   regExpr            [4] IMPLICIT [616]InternationalString
OPTIONAL,
                             -- A regular expression that promptResponse should
                             -- match. See IEEE 1003.2 Volume 1, Section 2.8
                             -- "Regular Expression Notation." For example if
                             -- promptId is "Year of publication," regExpr
                             -- might be "19[89][0-9]|20[0-9][0-9]".
   responseRequired   [5] IMPLICIT NULL OPTIONAL,
   allowedValues      [6] IMPLICIT SEQUENCE OF [617]InternationalString OPTIONA
L,
                             -- e.g. promptId="Desired color"; allowed = 'red',
                             -- 'blue','Green'.
   shouldSave         [7] IMPLICIT NULL OPTIONAL,
                             -- Target recommends that origin save the data
                             -- that it prompts from the user corresponding to
                             -- this prompt, because it is likely to be
                             -- requested again (so origin might not have to
                             -- prompt the user next time).
   dataType           [8] IMPLICIT INTEGER{
                                integer         (1),
                                date            (2),
                                float           (3),
                                alphaNumeric    (4),
                                url-urn         (5),
                                boolean         (6)} OPTIONAL,
                                   -- Target telling origin type of data it
                                   -- wants. E.g., if "date" is specified,
                                   -- presumably the origin will try to prompt
                                   -- something "date-like" from the user.
   diagnostic      [9] IMPLICIT EXTERNAL OPTIONAL
                          -- Intended for repeat requests when there is an
                          -- error the origin should report to the user from
                          -- previous attempt.
                        }


  Response ::= SEQUENCE OF SEQUENCE {
        promptId      [1] [618]PromptId,
                             -- Corresponds to a prompt in the challenge, or
                             -- may be unprompted, for example "newPassword."
                             -- If unprompted, should be "enumerated."
                             -- If this responds to a non-enumerated prompt,
                             -- then nonEnumeratedPrompt should contain the
                             -- prompt string from the challenge.
      promptResponse  [2] CHOICE{
                             string       [1] IMPLICIT [619]InternationalString
,
                             accept       [2] IMPLICIT BOOLEAN,
                             acknowledge  [3] IMPLICIT NULL,
                             diagnostic   [4] [620]DiagRec,
                             encrypted    [5] IMPLICIT [621]Encryption}}


 PromptId ::= CHOICE{
   enummeratedPrompt      [1] IMPLICIT SEQUENCE{
                                 type                  [1] IMPLICIT INTEGER{
                                                                 groupId      (
0),
                                                                 userId       (
1),
                                                                 password     (
2),
                                                                 newPassword  (
3),
                                                                 copyright    (
4),
                                          -- When type on Challenge is
                                          -- 'copyright', promptInfo has text o
f
                                          -- copyright message to be displayed
                                          -- verbatim to the user. If
                                          -- promptResponse indicates
                                          -- 'acceptance', this indicates the
                                          -- user has been shown, and accepted,
                                          -- the terms of the copyright. This i
s
                                          -- not intended to be legally binding
,
                                          -- but provides a good-faith attempt
                                          -- on the part of the target to infor
m
                                          -- the user of the copyright.
                                                                 sessionId    (
5)},
                                 suggestedString       [2] IMPLICIT
                                             [622]InternationalString
OPTIONAL},
    nonEnumeratedPrompt   [2] IMPLICIT [623]InternationalString}


 Encryption ::= SEQUENCE{
   cryptType    [1] IMPLICIT OCTET STRING OPTIONAL,
   credential   [2] IMPLICIT OCTET STRING OPTIONAL,
                      --random number, SALT, or other factor
   data         [3] IMPLICIT OCTET STRING}

END





AccessControlFormat des-1
{Z39-50-accessControlFormat  des-1 (2)} DEFINITIONS ::=
BEGIN
      DES-RN-Object ::= CHOICE {
         challenge        [1] IMPLICIT [624]DRNType,
         response         [2] IMPLICIT [625]DRNType}

      DRNType ::= SEQUENCE{
         userId           [1] IMPLICIT OCTET STRING OPTIONAL,
         salt             [2] IMPLICIT OCTET STRING OPTIONAL,
         randomNumber     [3] IMPLICIT OCTET STRING}
END





AccessControlFormat-krb-1
{Z39-50-accessControlFormat  krb-1 (3)} DEFINITIONS ::=
BEGIN
IMPORTS [626]InternationalString FROM Z39-50-APDU-1995;

   KRBObject ::= CHOICE {
      challenge    [1] IMPLICIT [627]KRBRequest,
      response     [2] IMPLICIT [628]KRBResponse}

   KRBRequest ::= SEQUENCE{
      service      [1] IMPLICIT [629]InternationalString,
      instance     [2] IMPLICIT [630]InternationalString
OPTIONAL,
      realm        [3] IMPLICIT [631]InternationalString
OPTIONAL
                          -- target requests a ticket for the given service,
                          -- instance, and realm
                      }

   KRBResponse ::= SEQUENCE{
      userid       [1] IMPLICIT [632]InternationalString
OPTIONAL,
      ticket       [2] IMPLICIT OCTET STRING
                          -- origin responds with a ticket for the requested
                          -- service
                      }
END






ESFormat-PersistentResultSet
{Z39-50-extendedService PersistentResultSet (1)} DEFINITIONS ::=
BEGIN
IMPORTS [633]InternationalString FROM Z39-50-APDU-1995;
PersistentResultSet ::= CHOICE{
    esRequest      [1] IMPLICIT SEQUENCE{
                          toKeep       [1] IMPLICIT NULL,
                          notToKeep    [2] [634]OriginPartNotToKeep
OPTIONAL},
    taskPackage   [2] IMPLICIT SEQUENCE{
                          originPart   [1] IMPLICIT NULL,
                          targetPart   [2] [635]TargetPart OPTIONAL}}

OriginPartNotToKeep ::= SEQUENCE{
   originSuppliedResultSet   [1] IMPLICIT [636]InternationalString OPTIONAL,
                                   -- name of transient result set, supplied on
                                   -- request, mandatory unless function is
'delete'
   replaceOrAppend           [2] IMPLICIT INTEGER{
                                       -- only if function is "modify"
                                   replace   (1),
                                   append    (2)} OPTIONAL}

TargetPart ::= SEQUENCE{
   targetSuppliedResultSet   [1] IMPLICIT [637]InternationalString OPTIONAL,
                                   -- Name of transient result set, supplied by
                                   -- target, representing the persistent
                                   -- result set to which package pertains.
                                   -- Meaningful only when package is
                                   -- presented. (i.e. not on ES response)
   numberOfRecords           [2] IMPLICIT INTEGER OPTIONAL}
END





ESFormat-PersistentQuery
{Z39-50-extendedService PersistentQuery (2)} DEFINITIONS ::=
BEGIN
IMPORTS [638]Query, [639]InternationalString, [640]OtherInformation FROM Z39-50
-APDU-1995;
PersistentQuery ::= CHOICE{
    esRequest      [1] IMPLICIT SEQUENCE{
                          toKeep       [1] [641]OriginPartToKeep
OPTIONAL,
                          notToKeep    [2] [642]OriginPartNotToKeep},
    taskPackage    [2] IMPLICIT SEQUENCE{
                          originPart   [1] [643]OriginPartToKeep
OPTIONAL,
                          targetPart   [2] [644]TargetPart}}

OriginPartToKeep ::= SEQUENCE{
   dbNames                [2] IMPLICIT SEQUENCE OF [645]InternationalString
                                           OPTIONAL,
   additionalSearchInfo   [3] [646]OtherInformation OPTIONAL}

OriginPartNotToKeep ::= CHOICE{
   package                [1] IMPLICIT [647]InternationalString,
   query                  [2] [648]Query}

TargetPart ::= Query

END





ESFormat-PeriodicQuerySchedule
{Z39-50-extendedService PeriodicQuerySchedule (3)} DEFINITIONS ::=
BEGIN
IMPORTS [649]Query, [650]InternationalString, [651]IntUnit FROM
Z39-50-APDU-1995
[652]ExportSpecification, [653]Destination FROM ESFormat-ExportSpecification;

PeriodicQuerySchedule ::= CHOICE{
    esRequest      [1] IMPLICIT SEQUENCE{
                          toKeep       [1] [654]OriginPartToKeep,
                          notToKeep    [2] [655]OriginPartNotToKeep},
    taskPackage    [2] IMPLICIT SEQUENCE{
                          originPart   [1] [656]OriginPartToKeep,
                          targetPart   [2] [657]TargetPart}}

OriginPartToKeep ::=SEQUENCE{
   activeFlag             [1] IMPLICIT BOOLEAN,
   databaseNames          [2] IMPLICIT SEQUENCE OF [658]InternationalString
                                 OPTIONAL,
   resultSetDisposition   [3] IMPLICIT INTEGER{
                                 replace     (1),
                                 append      (2),
                                createNew    (3)
                                -- Only if origin and target have agreement
                                -- about naming convention for the resulting
                                -- package, and only if no resut set is
                                -- specified.
                             } OPTIONAL,
                                -- Mandatory on 'create' if result set is
                                -- specified, in which case it must be
                                -- 'replace' or 'append.
   alertDestination       [4] [659]Destination OPTIONAL,
   exportParameters       [5] CHOICE{
                                packageName     [1] IMPLICIT
                                                    [660]InternationalString,
                                exportPackage   [2] [661]ExportSpecification}
                                    OPTIONAL}

OriginPartNotToKeep ::= SEQUENCE{
   querySpec                 [1] CHOICE{
                                 actualQuery    [1] [662]Query,
                                   packageName  [2] IMPLICIT
                                       [663]InternationalString} OPTIONAL,
                                -- mandatory for 'create'
   originSuggestedPeriod     [2] [664]Period OPTIONAL,  -- mandatory for
'create'
   expiration                [3] IMPLICIT GeneralizedTime OPTIONAL,
   resultSetPackage          [4] IMPLICIT [665]InternationalString
OPTIONAL}

TargetPart ::= SEQUENCE{
   actualQuery            [1] [666]Query,
   targetStatedPeriod     [2] [667]Period,
                                -- Target supplies the period, which may be
                                -- same as origin proposed.
   expiration             [3] IMPLICIT GeneralizedTime OPTIONAL,
                                -- Target supplies value for task package. It
                                -- may be the same as origin proposed or
                                -- different from (and overrides) origin
                                -- proposal, but if omitted, there is no
                                -- expiration.
   resultSetPackage       [4] IMPLICIT [668]InternationalString
OPTIONAL,
                                -- May be omitted only if exportParameters was
                                -- supplied. Target supplies same name as
                                -- origin supplied, if origin did supply a
                                -- name.
   lastQueryTime          [5] IMPLICIT GeneralizedTime,
   lastResultNumber       [6] IMPLICIT INTEGER,
   numberSinceModify      [7] IMPLICIT INTEGER OPTIONAL}

   Period ::= CHOICE{
                unit            [1] IMPLICIT [669]IntUnit,
                businessDaily   [2] IMPLICIT NULL,
                continuous      [3] IMPLICIT NULL,
                other           [4] IMPLICIT [670]InternationalString}
END





ESFormat-ItemOrder
{Z39-50-extendedService ItemOrder (4)} DEFINITIONS ::=
BEGIN
IMPORTS [671]InternationalString FROM Z39-50-APDU-1995;

ItemOrder ::= CHOICE{
    esRequest      [1] IMPLICIT SEQUENCE{
                          toKeep       [1] [672]OriginPartToKeep
OPTIONAL,
                          notToKeep    [2] [673]OriginPartNotToKeep},
    taskPackage    [2] IMPLICIT SEQUENCE{
                          originPart   [1] [674]OriginPartToKeep
OPTIONAL,
                          targetPart   [2] [675]TargetPart}}

OriginPartToKeep ::= SEQUENCE{
   supplDescription   [1] IMPLICIT EXTERNAL OPTIONAL,
   contact            [2] IMPLICIT SEQUENCE{
                             name  [1]   IMPLICIT [676]InternationalString
OPTIONAL,
                             phone [2]   IMPLICIT [677]InternationalString
OPTIONAL,
                             email [3]   IMPLICIT [678]InternationalString
OPTIONAL}
                                                     OPTIONAL,
   addlBilling        [3] IMPLICIT SEQUENCE{
                          paymentMethod      [1] CHOICE{
                                billInvoice                   [0] IMPLICIT NULL
,
                                prepay                        [1] IMPLICIT NULL
,
                                depositAccount                [2] IMPLICIT NULL
,
                                creditCard                    [3] IMPLICIT
                                                                 CreditCardInfo
,
                                cardInfoPreviouslySupplied    [4] IMPLICIT NULL
,
                                privateKnown                  [5] IMPLICIT NULL
,
                                privateNotKnown               [6] IMPLICIT
                                                                  EXTERNAL},
                          customerReference  [2] IMPLICIT[679]InternationalStri
ng
                                                           OPTIONAL,
                          customerPONumber   [3] IMPLICIT[680]InternationalStri
ng
                                                     OPTIONAL}  OPTIONAL}

CreditCardInfo    ::= SEQUENCE{
      nameOnCard          [1] IMPLICIT [681]InternationalString,
      expirationDate      [2] IMPLICIT [682]InternationalString,
      cardNumber          [3] IMPLICIT [683]InternationalString}

OriginPartNotToKeep ::= SEQUENCE{
                          -- Corresponds to 'requestedItem' in service
                          -- definition. Must supply at least one, and may
                          -- supply both.
   resultSetItem   [1]    IMPLICIT SEQUENCE{
                             resultSetId  [1] IMPLICIT [684]InternationalString
,
                           item           [2] IMPLICIT INTEGER} OPTIONAL,
   itemRequest     [2] IMPLICIT EXTERNAL OPTIONAL
                          -- When itemRequest is an ILL-Request APDU,
                          -- use OID {iso standard 10161 abstract-syntax (2)
                          -- ill-apdus (1)}
                     }

TargetPart ::= SEQUENCE{
   itemRequest            [1] IMPLICIT EXTERNAL OPTIONAL,
                                -- When itemRequest is an ILL-Request APDU, use
                                -- OID 1.0.10161.2.1 (as above)
   statusOrErrorReport    [2] IMPLICIT EXTERNAL,
                                -- When statusOrErrorReport is an ILL
                                -- Status-Or-Error-Report APDU, use OID
                                -- 1.0.10161.2.1 (as above)
   auxiliaryStatus        [3] IMPLICIT INTEGER{
                                   notReceived         (1),
                                   loanQueue           (2),
                                   forwarded           (3),
                                   unfilledCopyright   (4),
                                   filledCopyright     (5)} OPTIONAL}
END





ESFormat-Update
{Z39-50-extendedService Update (5)} DEFINITIONS ::=
BEGIN
IMPORTS [685]DiagRec, [686]InternationalString FROM Z39-50-APDU-1995;

Update ::= CHOICE{
    esRequest      [1] IMPLICIT SEQUENCE{
                          toKeep       [1] [687]OriginPartToKeep,
                          notToKeep    [2] [688]OriginPartNotToKeep},
    taskPackage    [2] IMPLICIT SEQUENCE{
                          originPart   [1] [689]OriginPartToKeep,
                          targetPart   [2] [690]TargetPart}}

OriginPartToKeep ::= SEQUENCE{
   action          [1] IMPLICIT INTEGER{
                          recordInsert    (1),
                          recordReplace   (2),
                          recordDelete    (3),
                          elementUpdate   (4)},
   databaseName    [2] IMPLICIT [691]InternationalString,
   schema          [3] IMPLICIT OBJECT IDENTIFIER OPTIONAL,
   elementSetName  [4] IMPLICIT [692]InternationalString
OPTIONAL}

OriginPartNotToKeep ::= [693]SuppliedRecords

TargetPart ::= SEQUENCE{
   updateStatus           [1] IMPLICIT INTEGER{
                                success   (1),
                                partial   (2),
                                failure   (3)},
   globalDiagnostics      [2] IMPLICIT SEQUENCE OF [694]DiagRec
OPTIONAL,
                                -- These are non-surrogate diagnostics relating
                                -- to the task, not to individual records.
   taskPackageRecords     [3] IMPLICIT SEQUENCE OF [695]TaskPackageRecordStruct
ure
                                -- There should be a TaskPackageRecordStructure
                                -- for every record supplied. The target should
                                -- create such a structure for every record
                                -- immediately upon creating the task package
                                -- to include correlation information and
                                -- status. The record itself would not be
                                -- included until processing for that record is
                                -- complete.
                  }

-- Auxiliary definitions for Update
SuppliedRecords ::= SEQUENCE OF SEQUENCE{
   recordId           [1] CHOICE{
                             number   [1] IMPLICIT INTEGER,
                             string   [2] IMPLICIT [696]InternationalString,
                             opaque   [3] IMPLICIT OCTET STRING} OPTIONAL,
   supplementalId     [2] CHOICE{
                             timeStamp          [1] IMPLICIT GeneralizedTime,
                             versionNumber      [2] IMPLICIT
                                                    [697]InternationalString,
                             previousVersion    [3] IMPLICIT EXTERNAL} OPTIONAL
,
   correlationInfo    [3] IMPLICIT [698]CorrelationInfo OPTIONAL,
   record             [4] IMPLICIT EXTERNAL}

CorrelationInfo ::= SEQUENCE{
                     -- origin may supply one or both for any record:
   note  [1] IMPLICIT [699]InternationalString OPTIONAL,
   id    [2] IMPLICIT INTEGER OPTIONAL}

TaskPackageRecordStructure ::= SEQUENCE{
      recordOrSurDiag     [1] CHOICE {
                                record      [1] IMPLICIT EXTERNAL,
                                                -- Choose 'record' if
                                                -- recordStatus is 'success',
                                                -- and elementSetName was
                                                -- supplied.
                                diagnostic   [2] [700]DiagRec
                                                -- Choose 'diagnostic', if
                                                -- RecordStatus is failure.
                                                } OPTIONAL,
                                -- The parameter recordOrSurDiag will thus be
                                -- omitted only if 'elementSetName' was omitted
                                -- and recordStatus is 'success'; or if record
                                -- status is 'queued' or in 'process'.
      correlationInfo     [2] IMPLICIT [701]CorrelationInfo
OPTIONAL,
                                -- This should be included if it was supplied
                                -- by the origin.
      recordStatus        [3] IMPLICIT INTEGER{
                                   success      (1),
                                   queued       (2),
                                   inProcess    (3),
                                   failure      (4)}}
END


ESFormat-ExportSpecification
{Z39-50-extendedService ExportSpecification (6)} DEFINITIONS ::=
BEGIN
EXPORTS [702]ExportSpecification, [703]Destination; IMPORTS [704]CompSpec,
[705]InternationalString FROM Z39-50-APDU-1995;

ExportSpecification ::= CHOICE{
    esRequest      [1] IMPLICIT SEQUENCE{
                          toKeep       [1] [706]OriginPartToKeep,
                          notToKeep    [2] IMPLICIT NULL},
    taskPackage    [2] IMPLICIT SEQUENCE{
                          originPart   [1] [707]OriginPartToKeep,
                          targetPart   [2] IMPLICIT NULL}}

OriginPartToKeep ::= SEQUENCE{
   composition        [1] IMPLICIT [708]CompSpec,
   exportDestination  [2] [709]Destination}

  Destination ::= CHOICE{
   phoneNumber     [1]    IMPLICIT [710]InternationalString,
   faxNumber       [2]    IMPLICIT [711]InternationalString,
   x400address     [3]    IMPLICIT [712]InternationalString,
   emailAddress    [4]    IMPLICIT [713]InternationalString,
   pagerNumber     [5]    IMPLICIT [714]InternationalString,
   ftpAddress      [6]    IMPLICIT [715]InternationalString,
   ftamAddress     [7]    IMPLICIT [716]InternationalString,
   printerAddress  [8]    IMPLICIT [717]InternationalString,
   other           [100]  IMPLICIT SEQUENCE{
                             vehicle      [1] IMPLICIT [718]InternationalString

                                                     OPTIONAL,
                           destination    [2] IMPLICIT [719]InternationalString
}}
END





ESFormat-ExportInvocation
{Z39-50-extendedService ExportInvocation (7)} DEFINITIONS ::=
BEGIN
IMPORTS [720]InternationalString, [721]IntUnit FROM Z39-50-APDU-1995
[722]ExportSpecification FROM ESFormat-ExportSpecification;

ExportInvocation ::= CHOICE{
    esRequest      [1] IMPLICIT SEQUENCE{
                          toKeep      [1] [723]OriginPartToKeep,
                          notToKeep   [2] [724]OriginPartNotToKeep},
    taskPackage    [2] IMPLICIT SEQUENCE{
                          originPart   [1] [725]OriginPartToKeep,
                          targetPart   [2] [726]TargetPart OPTIONAL}}

OriginPartToKeep ::= SEQUENCE{
   exportSpec      [1] CHOICE{
                          packageName  [1] IMPLICIT [727]InternationalString,
                          packageSpec  [2] [728]ExportSpecification},
   numberOfCopies  [2] IMPLICIT INTEGER}

OriginPartNotToKeep   ::= SEQUENCE{
   resultSetId     [1] IMPLICIT [729]InternationalString,
   records         [2] CHOICE{
                          all      [1] IMPLICIT NULL,
                          ranges   [2] IMPLICIT SEQUENCE OF SEQUENCE{
                                          start   [1] IMPLICIT INTEGER,
                                          count   [2] IMPLICIT INTEGER OPTIONAL
                                             -- Count may be omitted only on
                                             -- last range, to indicate "all
                                             -- remaining records beginning wit
h
                                             -- 'start'."
                              }}}

TargetPart    ::= SEQUENCE{
      estimatedQuantity   [1] IMPLICIT [730]IntUnit OPTIONAL,
      quantitySoFar       [2] IMPLICIT [731]IntUnit OPTIONAL,
      estimatedCost       [3] IMPLICIT [732]IntUnit OPTIONAL,
      costSoFar           [4] IMPLICIT [733]IntUnit OPTIONAL}
END





UserInfoFormat-searchResult-1
{Z39-50-userInfoFormat searchResult-1 (1)} DEFINITIONS ::=
BEGIN
IMPORTS [734]DatabaseName, [735]Term, [736]Query, [737]IntUnit, [738]Internatio
nalString
FROM Z39-50-APDU-1995;

SearchInfoReport ::= SEQUENCE OF SEQUENCE{
   subqueryId                [1] IMPLICIT [739]InternationalString
OPTIONAL,
                                   -- shorthand identifier of subquery
   fullQuery                 [2] IMPLICIT BOOLEAN,
                                   -- 'true' means this is the full query;
                                   -- 'false', a sub-query
   subqueryExpression        [3] [740]QueryExpression OPTIONAL,

                                   -- A subquery of the query as submitted. May
                                   -- be whole query; if so, "fullQuery" should
                                   -- be 'true'.
   subqueryInterpretation    [4] [741]QueryExpression OPTIONAL,

                                   -- how target interpreted subquery
   subqueryRecommendation    [5] [742]QueryExpression
OPTIONAL,
                                   -- target-recommended alternative
   subqueryCount             [6] IMPLICIT INTEGER OPTIONAL,
                                   -- Number of records for this subQuery,
                                   -- across all of the specified databases.
                                   -- (If during search, via resource control,
                                   -- number of records so far).
   subqueryWeight            [7] IMPLICIT [743]IntUnit OPTIONAL,
                                   -- relative weight of this subquery
   resultsByDB               [8] IMPLICIT [744]ResultsByDB
OPTIONAL}

ResultsByDB ::= SEQUENCE OF SEQUENCE{
   databases       [1] CHOICE{
                          all   [1] IMPLICIT NULL,
                                       -- applies across all of the databases i
n
                                       -- Search PDU
                          list  [2] IMPLICIT SEQUENCE OF [745]DatabaseName
                                       -- applies across all databases in this
                                       -- list
                             },
   count           [2] IMPLICIT INTEGER OPTIONAL,
                          -- Number of records for query component (and, as
                          -- above, if during search, via resource control,
                          -- number of records so far).
   resultSetName   [3] IMPLICIT [746]InternationalString
OPTIONAL
                          -- Target-assigned result set by which subQuery is
                          -- available. Should not be provided unless
                          -- processing for this query component is concluded
                          -- (i.e., when this report comes during search, via
                          -- resource control, as opposed to after search, via
                          -- additionalSearchInfo).
                     }

QueryExpression ::=  CHOICE {
      term   [1] IMPLICIT SEQUENCE{
                   queryTerm    [1] [747]Term,
                   termComment  [2] IMPLICIT [748]InternationalString OPTIONAL}
,
      query  [2] [749]Query}
END





{Z39-50-elementSpec eSpec-1 (1)} DEFINITIONS ::=
BEGIN
IMPORTS [750]Variant FROM RecordSyntax-generic
[751]StringOrNumeric, [752]InternationalString FROM Z39-50-APDU-1995;
--
Espec-1 ::= SEQUENCE{
   elementSetNames           [1] IMPLICIT SEQUENCE OF [753]InternationalString
                                           OPTIONAL,
                                   -- Origin may include one or more element
                                   -- set names, each specifying a set of
                                   -- elements. Each of the elements is to be
                                   -- treated as an elementRequest in the form
                                   -- of simpleElement, where occurrence is 1.
   defaultVariantSetId       [2] IMPLICIT OBJECT IDENTIFIER OPTIONAL,
                                   -- If supplied, applies whenever
                                   -- variantRequest does not include
                                   -- variantSetId.
   defaultVariantRequest     [3] IMPLICIT [754]Variant OPTIONAL,
                                   -- If supplied, then for each simple
                                   -- elementRequest that does not include a
                                   -- variantRequest, the defaultVariantRequest
                                   -- applies. (defaultVariantRequest does not
                                   -- apply to a compositeRequest.)
   defaultTagType            [4] IMPLICIT INTEGER OPTIONAL,
                                   -- If supplied, applies whenever 'tagType'
                                   -- (within 'tag' within TagPath) is omitted.
   elements                  [5] IMPLICIT SEQUENCE OF [755]ElementRequest OPTIO
NAL}
--

ElementRequest::= CHOICE{
   simpleElement      [1] IMPLICIT [756]SimpleElement,
   compositeElement   [2] IMPLICIT SEQUENCE{
                             elementList  [1] CHOICE{
                                             primitives   [1] IMPLICIT SEQUENCE
                                                        OF [757]InternationalSt
ring,
                                                -- Origin may specify one or
                                                -- more element set names, each
                                                -- identifying a set of
                                                -- elements, and the composite
                                                -- element is the union.
                                             specs         [2] IMPLICIT SEQUENC
E
                                                               OF SimpleElement
},
                  deliveryTag             [2] IMPLICIT [758]TagPath,
                                             -- DeliveryTag tagPath for
                                             -- compositeElement may not
                                             -- include wildThing or wildPath.
                  variantRequest          [3] IMPLICIT [759]Variant OPTIONAL}}

SimpleElement ::= SEQUENCE{
      path            [1] IMPLICIT [760]TagPath,
      variantRequest  [2] IMPLICIT [761]Variant OPTIONAL}


TagPath ::= SEQUENCE OF CHOICE{
   specificTag  [1] IMPLICIT SEQUENCE{
                      tagType   [1] IMPLICIT INTEGER OPTIONAL,
                                       -- If omitted, then 'defaultTagType'
                                       -- (above) applies, if supplied, and
                                       -- if not supplied, then default listed
                                       -- in schema applies.
                  tagValue      [2] [762]StringOrNumeric,
                   occurrence   [3] [763]Occurrences OPTIONAL
                                       -- default is "first occurrence"
                           },
   wildThing    [2] [764]Occurrences,
                      -- Get Nth "thing" at this level, regardless of tag, for
                      -- each N specified by "Occurrences" (which may be 'all'
                      -- meaning match every element at this level). E.g., if
                      -- "Occurrences" is 3, get third element regardless of
                      -- its tag or the tag of the first two elements.
   wildPath     [3] IMPLICIT NULL
                      -- Match any tag, at this level or below, that is on a
                      -- path for which next tag in this TagPath sequence
                      -- occurs. WildPath may not be last member of the
                      -- TagPath sequence.
                                 }
--
Occurrences ::= CHOICE{
   all       [1] IMPLICIT NULL,
   last      [2] IMPLICIT NULL,
   values    [3] IMPLICIT SEQUENCE{
                   start     [1] IMPLICIT INTEGER,
                                   -- if 'start' alone is included, then single
                                   -- occurrence is requested
                   howMany   [2] IMPLICIT INTEGER OPTIONAL
                                   -- For example, if 'start' is 5 and
                                   -- 'howMany' is 6, then request is for
                                   -- "occurrences 5 through 10."
                           }}
END
     _________________________________________________________________
     _________________________________________________________________
   
   Library of Congress
   
   
    Comments: [765]lcweb@loc.gov (03/04/96)

References

   1. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
   2. file://localhost/home/asl2/src/PyZ3950/asn1.html#Term
   3. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetId
   4. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeList
   5. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeElement
   6. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementSetName
   7. file://localhost/home/asl2/src/PyZ3950/asn1.html#SortElement
   8. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
   9. file://localhost/home/asl2/src/PyZ3950/asn1.html#CompSpec
  10. file://localhost/home/asl2/src/PyZ3950/asn1.html#Specification
  11. file://localhost/home/asl2/src/PyZ3950/asn1.html#Permissions
  12. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
  13. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
  14. file://localhost/home/asl2/src/PyZ3950/asn1.html#Unit
  15. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
  16. file://localhost/home/asl2/src/PyZ3950/asn1.html#Query
  17. file://localhost/home/asl2/src/PyZ3950/asn1.html#Records
  18. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResultSetId
  19. file://localhost/home/asl2/src/PyZ3950/asn1.html#DefaultDiagFormat
  20. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
  21. file://localhost/home/asl2/src/PyZ3950/asn1.html#InitializeRequest
  22. file://localhost/home/asl2/src/PyZ3950/asn1.html#InitializeResponse
  23. file://localhost/home/asl2/src/PyZ3950/asn1.html#SearchRequest
  24. file://localhost/home/asl2/src/PyZ3950/asn1.html#SearchResponse
  25. file://localhost/home/asl2/src/PyZ3950/asn1.html#PresentRequest
  26. file://localhost/home/asl2/src/PyZ3950/asn1.html#PresentResponse
  27. file://localhost/home/asl2/src/PyZ3950/asn1.html#DeleteResultSetRequest
  28. file://localhost/home/asl2/src/PyZ3950/asn1.html#DeleteResultSetResponse
  29. file://localhost/home/asl2/src/PyZ3950/asn1.html#AccessControlRequest
  30. file://localhost/home/asl2/src/PyZ3950/asn1.html#AccessControlResponse
  31. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResourceControlRequest
  32. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResourceControlResponse
  33. file://localhost/home/asl2/src/PyZ3950/asn1.html#TriggerResourceControlRequest
  34. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResourceReportRequest
  35. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResourceReportResponse
  36. file://localhost/home/asl2/src/PyZ3950/asn1.html#ScanRequest
  37. file://localhost/home/asl2/src/PyZ3950/asn1.html#ScanResponse
  38. file://localhost/home/asl2/src/PyZ3950/asn1.html#SortRequest
  39. file://localhost/home/asl2/src/PyZ3950/asn1.html#SortResponse
  40. file://localhost/home/asl2/src/PyZ3950/asn1.html#Segment
  41. file://localhost/home/asl2/src/PyZ3950/asn1.html#ExtendedServicesRequest
  42. file://localhost/home/asl2/src/PyZ3950/asn1.html#ExtendedServicesResponse
  43. file://localhost/home/asl2/src/PyZ3950/asn1.html#Close
  44. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
  45. file://localhost/home/asl2/src/PyZ3950/asn1.html#ProtocolVersion
  46. file://localhost/home/asl2/src/PyZ3950/asn1.html#Options
  47. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
  48. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
  49. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
  50. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
  51. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
  52. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
  53. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
  54. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
  55. file://localhost/home/asl2/src/PyZ3950/asn1.html#ProtocolVersion
  56. file://localhost/home/asl2/src/PyZ3950/asn1.html#Options
  57. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
  58. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
  59. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
  60. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
  61. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
  62. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
  63. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
  64. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementSetNames
  65. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementSetNames
  66. file://localhost/home/asl2/src/PyZ3950/asn1.html#Query
  67. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
  68. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
  69. file://localhost/home/asl2/src/PyZ3950/asn1.html#RPNQuery
  70. file://localhost/home/asl2/src/PyZ3950/asn1.html#RPNQuery
  71. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetId
  72. file://localhost/home/asl2/src/PyZ3950/asn1.html#RPNStructure
  73. file://localhost/home/asl2/src/PyZ3950/asn1.html#Operand
  74. file://localhost/home/asl2/src/PyZ3950/asn1.html#RPNStructure
  75. file://localhost/home/asl2/src/PyZ3950/asn1.html#RPNStructure
  76. file://localhost/home/asl2/src/PyZ3950/asn1.html#Operator
  77. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributesPlusTerm
  78. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResultSetId
  79. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResultSetPlusAttributes
  80. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeList
  81. file://localhost/home/asl2/src/PyZ3950/asn1.html#Term
  82. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResultSetId
  83. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeList
  84. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeElement
  85. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
  86. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
  87. file://localhost/home/asl2/src/PyZ3950/asn1.html#ProximityOperator
  88. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetId
  89. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
  90. file://localhost/home/asl2/src/PyZ3950/asn1.html#KnownProximityUnit
  91. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
  92. file://localhost/home/asl2/src/PyZ3950/asn1.html#PresentStatus
  93. file://localhost/home/asl2/src/PyZ3950/asn1.html#Records
  94. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
  95. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
  96. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
  97. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResultSetId
  98. file://localhost/home/asl2/src/PyZ3950/asn1.html#Range
  99. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementSetNames
 100. file://localhost/home/asl2/src/PyZ3950/asn1.html#CompSpec
 101. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 102. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 103. file://localhost/home/asl2/src/PyZ3950/asn1.html#NamePlusRecord
 104. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 105. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 106. file://localhost/home/asl2/src/PyZ3950/asn1.html#PresentStatus
 107. file://localhost/home/asl2/src/PyZ3950/asn1.html#Records
 108. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 109. file://localhost/home/asl2/src/PyZ3950/asn1.html#NamePlusRecord
 110. file://localhost/home/asl2/src/PyZ3950/asn1.html#DefaultDiagFormat
 111. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 112. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 113. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 114. file://localhost/home/asl2/src/PyZ3950/asn1.html#FragmentSyntax
 115. file://localhost/home/asl2/src/PyZ3950/asn1.html#FragmentSyntax
 116. file://localhost/home/asl2/src/PyZ3950/asn1.html#FragmentSyntax
 117. file://localhost/home/asl2/src/PyZ3950/asn1.html#DefaultDiagFormat
 118. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 119. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 120. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 121. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementSetName
 122. file://localhost/home/asl2/src/PyZ3950/asn1.html#Specification
 123. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 124. file://localhost/home/asl2/src/PyZ3950/asn1.html#Specification
 125. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 126. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 127. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResultSetId
 128. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 129. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 130. file://localhost/home/asl2/src/PyZ3950/asn1.html#DeleteSetStatus
 131. file://localhost/home/asl2/src/PyZ3950/asn1.html#ListStatuses
 132. file://localhost/home/asl2/src/PyZ3950/asn1.html#ListStatuses
 133. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 134. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 135. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResultSetId
 136. file://localhost/home/asl2/src/PyZ3950/asn1.html#DeleteSetStatus
 137. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 138. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 139. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 140. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 141. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 142. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 143. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResourceReport
 144. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 145. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 146. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 147. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 148. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResourceReportId
 149. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 150. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 151. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 152. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResourceReportId
 153. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 154. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 155. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResourceReport
 156. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 157. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 158. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 159. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetId
 160. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributesPlusTerm
 161. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 162. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 163. file://localhost/home/asl2/src/PyZ3950/asn1.html#ListEntries
 164. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetId
 165. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 166. file://localhost/home/asl2/src/PyZ3950/asn1.html#Entry
 167. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 168. file://localhost/home/asl2/src/PyZ3950/asn1.html#TermInfo
 169. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 170. file://localhost/home/asl2/src/PyZ3950/asn1.html#Term
 171. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 172. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeList
 173. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributesPlusTerm
 174. file://localhost/home/asl2/src/PyZ3950/asn1.html#OccurrenceByAttributes
 175. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 176. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeList
 177. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 178. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 179. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 180. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 181. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 182. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 183. file://localhost/home/asl2/src/PyZ3950/asn1.html#SortKeySpec
 184. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 185. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 186. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 187. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 188. file://localhost/home/asl2/src/PyZ3950/asn1.html#SortElement
 189. file://localhost/home/asl2/src/PyZ3950/asn1.html#SortKey
 190. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 191. file://localhost/home/asl2/src/PyZ3950/asn1.html#SortKey
 192. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 193. file://localhost/home/asl2/src/PyZ3950/asn1.html#Specification
 194. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetId
 195. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeList
 196. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 197. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 198. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 199. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 200. file://localhost/home/asl2/src/PyZ3950/asn1.html#Permissions
 201. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 202. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementSetName
 203. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 204. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 205. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 206. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 207. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 208. file://localhost/home/asl2/src/PyZ3950/asn1.html#ReferenceId
 209. file://localhost/home/asl2/src/PyZ3950/asn1.html#CloseReason
 210. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 211. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResourceReportId
 212. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResourceReport
 213. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 214. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 215. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 216. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 217. file://localhost/home/asl2/src/PyZ3950/asn1.html#InfoCategory
 218. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 219. file://localhost/home/asl2/src/PyZ3950/asn1.html#Unit
 220. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 221. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 222. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 223. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 224. file://localhost/home/asl2/src/PyZ3950/asn1.html#Term
 225. file://localhost/home/asl2/src/PyZ3950/asn1.html#Specification
 226. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeList
 227. file://localhost/home/asl2/src/PyZ3950/asn1.html#SortElement
 228. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 229. file://localhost/home/asl2/src/PyZ3950/asn1.html#DefaultDiagFormat
 230. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 231. file://localhost/home/asl2/src/PyZ3950/asn1.html#DefaultDiagFormat
 232. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagFormat
 233. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 234. file://localhost/home/asl2/src/PyZ3950/asn1.html#Specification
 235. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 236. file://localhost/home/asl2/src/PyZ3950/asn1.html#Specification
 237. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 238. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 239. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeList
 240. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeList
 241. file://localhost/home/asl2/src/PyZ3950/asn1.html#Term
 242. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 243. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeList
 244. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeList
 245. file://localhost/home/asl2/src/PyZ3950/asn1.html#SortElement
 246. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 247. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetId
 248. file://localhost/home/asl2/src/PyZ3950/asn1.html#Term
 249. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 250. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 251. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementSetName
 252. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 253. file://localhost/home/asl2/src/PyZ3950/asn1.html#Unit
 254. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 255. file://localhost/home/asl2/src/PyZ3950/asn1.html#Specification
 256. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 257. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeList
 258. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeElement
 259. file://localhost/home/asl2/src/PyZ3950/asn1.html#TargetInfo
 260. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseInfo
 261. file://localhost/home/asl2/src/PyZ3950/asn1.html#SchemaInfo
 262. file://localhost/home/asl2/src/PyZ3950/asn1.html#TagSetInfo
 263. file://localhost/home/asl2/src/PyZ3950/asn1.html#RecordSyntaxInfo
 264. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetInfo
 265. file://localhost/home/asl2/src/PyZ3950/asn1.html#TermListInfo
 266. file://localhost/home/asl2/src/PyZ3950/asn1.html#ExtendedServicesInfo
 267. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeDetails
 268. file://localhost/home/asl2/src/PyZ3950/asn1.html#TermListDetails
 269. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementSetDetails
 270. file://localhost/home/asl2/src/PyZ3950/asn1.html#RetrievalRecordDetails
 271. file://localhost/home/asl2/src/PyZ3950/asn1.html#SortDetails
 272. file://localhost/home/asl2/src/PyZ3950/asn1.html#ProcessingInformation
 273. file://localhost/home/asl2/src/PyZ3950/asn1.html#VariantSetInfo
 274. file://localhost/home/asl2/src/PyZ3950/asn1.html#UnitInfo
 275. file://localhost/home/asl2/src/PyZ3950/asn1.html#CategoryList
 276. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 277. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 278. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 279. file://localhost/home/asl2/src/PyZ3950/asn1.html#IconObject
 280. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 281. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 282. file://localhost/home/asl2/src/PyZ3950/asn1.html#ContactInfo
 283. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 284. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 285. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 286. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 287. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 288. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseList
 289. file://localhost/home/asl2/src/PyZ3950/asn1.html#NetworkAddress
 290. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 291. file://localhost/home/asl2/src/PyZ3950/asn1.html#AccessInfo
 292. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 293. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 294. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 295. file://localhost/home/asl2/src/PyZ3950/asn1.html#IconObject
 296. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 297. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 298. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 299. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseList
 300. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseList
 301. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 302. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 303. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 304. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 305. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 306. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 307. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 308. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 309. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 310. file://localhost/home/asl2/src/PyZ3950/asn1.html#ContactInfo
 311. file://localhost/home/asl2/src/PyZ3950/asn1.html#ContactInfo
 312. file://localhost/home/asl2/src/PyZ3950/asn1.html#ContactInfo
 313. file://localhost/home/asl2/src/PyZ3950/asn1.html#AccessInfo
 314. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 315. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 316. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 317. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementInfo
 318. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 319. file://localhost/home/asl2/src/PyZ3950/asn1.html#Path
 320. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementDataType
 321. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 322. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 323. file://localhost/home/asl2/src/PyZ3950/asn1.html#PrimitiveDataType
 324. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementInfo
 325. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 326. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 327. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 328. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 329. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 330. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 331. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 332. file://localhost/home/asl2/src/PyZ3950/asn1.html#PrimitiveDataType
 333. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 334. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 335. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 336. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 337. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 338. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementInfo
 339. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 340. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetId
 341. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 342. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeType
 343. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 344. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 345. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 346. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeDescription
 347. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 348. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 349. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 350. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 351. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 352. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 353. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 354. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 355. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 356. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 357. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 358. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 359. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 360. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 361. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 362. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 363. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetDetails
 364. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeCombinations
 365. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetId
 366. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeTypeDetails
 367. file://localhost/home/asl2/src/PyZ3950/asn1.html#OmittedAttributeInterpretation
 368. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeValue
 369. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 370. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 371. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 372. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 373. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 374. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 375. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 376. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 377. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 378. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeCombinations
 379. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 380. file://localhost/home/asl2/src/PyZ3950/asn1.html#Term
 381. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 382. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 383. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementSetName
 384. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 385. file://localhost/home/asl2/src/PyZ3950/asn1.html#PerElementDetails
 386. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 387. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 388. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 389. file://localhost/home/asl2/src/PyZ3950/asn1.html#PerElementDetails
 390. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 391. file://localhost/home/asl2/src/PyZ3950/asn1.html#RecordTag
 392. file://localhost/home/asl2/src/PyZ3950/asn1.html#Path
 393. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 394. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 395. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 396. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 397. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 398. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 399. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeCombinations
 400. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 401. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 402. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 403. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 404. file://localhost/home/asl2/src/PyZ3950/asn1.html#SortKeyDetails
 405. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 406. file://localhost/home/asl2/src/PyZ3950/asn1.html#Specification
 407. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeCombinations
 408. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 409. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 410. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 411. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 412. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 413. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 414. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 415. file://localhost/home/asl2/src/PyZ3950/asn1.html#VariantClass
 416. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 417. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 418. file://localhost/home/asl2/src/PyZ3950/asn1.html#VariantType
 419. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 420. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 421. file://localhost/home/asl2/src/PyZ3950/asn1.html#VariantValue
 422. file://localhost/home/asl2/src/PyZ3950/asn1.html#PrimitiveDataType
 423. file://localhost/home/asl2/src/PyZ3950/asn1.html#ValueSet
 424. file://localhost/home/asl2/src/PyZ3950/asn1.html#ValueRange
 425. file://localhost/home/asl2/src/PyZ3950/asn1.html#ValueDescription
 426. file://localhost/home/asl2/src/PyZ3950/asn1.html#ValueDescription
 427. file://localhost/home/asl2/src/PyZ3950/asn1.html#ValueDescription
 428. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 429. file://localhost/home/asl2/src/PyZ3950/asn1.html#Unit
 430. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 431. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 432. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 433. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 434. file://localhost/home/asl2/src/PyZ3950/asn1.html#UnitType
 435. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 436. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 437. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 438. file://localhost/home/asl2/src/PyZ3950/asn1.html#Units
 439. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 440. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 441. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 442. file://localhost/home/asl2/src/PyZ3950/asn1.html#CommonInfo
 443. file://localhost/home/asl2/src/PyZ3950/asn1.html#CategoryInfo
 444. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 445. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 446. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 447. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 448. file://localhost/home/asl2/src/PyZ3950/asn1.html#LanguageCode
 449. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 450. file://localhost/home/asl2/src/PyZ3950/asn1.html#LanguageCode
 451. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 452. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 453. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 454. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 455. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 456. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 457. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 458. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 459. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 460. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 461. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 462. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 463. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 464. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 465. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 466. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 467. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 468. file://localhost/home/asl2/src/PyZ3950/asn1.html#QueryTypeDetails
 469. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetId
 470. file://localhost/home/asl2/src/PyZ3950/asn1.html#AccessRestrictions
 471. file://localhost/home/asl2/src/PyZ3950/asn1.html#Costs
 472. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementSetName
 473. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 474. file://localhost/home/asl2/src/PyZ3950/asn1.html#PrivateCapabilities
 475. file://localhost/home/asl2/src/PyZ3950/asn1.html#RpnCapabilities
 476. file://localhost/home/asl2/src/PyZ3950/asn1.html#Iso8777Capabilities
 477. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 478. file://localhost/home/asl2/src/PyZ3950/asn1.html#RpnCapabilities
 479. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 480. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 481. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 482. file://localhost/home/asl2/src/PyZ3950/asn1.html#SearchKey
 483. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 484. file://localhost/home/asl2/src/PyZ3950/asn1.html#ProximitySupport
 485. file://localhost/home/asl2/src/PyZ3950/asn1.html#SearchKey
 486. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 487. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 488. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 489. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 490. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 491. file://localhost/home/asl2/src/PyZ3950/asn1.html#Charge
 492. file://localhost/home/asl2/src/PyZ3950/asn1.html#Charge
 493. file://localhost/home/asl2/src/PyZ3950/asn1.html#Charge
 494. file://localhost/home/asl2/src/PyZ3950/asn1.html#Charge
 495. file://localhost/home/asl2/src/PyZ3950/asn1.html#Charge
 496. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 497. file://localhost/home/asl2/src/PyZ3950/asn1.html#Charge
 498. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 499. file://localhost/home/asl2/src/PyZ3950/asn1.html#Unit
 500. file://localhost/home/asl2/src/PyZ3950/asn1.html#HumanString
 501. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 502. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetId
 503. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeCombination
 504. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeOccurrence
 505. file://localhost/home/asl2/src/PyZ3950/asn1.html#AttributeSetId
 506. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 507. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 508. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 509. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 510. file://localhost/home/asl2/src/PyZ3950/asn1.html#HoldingsRecord
 511. file://localhost/home/asl2/src/PyZ3950/asn1.html#HoldingsAndCircData
 512. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 513. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 514. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 515. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 516. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 517. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 518. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 519. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 520. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 521. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 522. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 523. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 524. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 525. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 526. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 527. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 528. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 529. file://localhost/home/asl2/src/PyZ3950/asn1.html#Volume
 530. file://localhost/home/asl2/src/PyZ3950/asn1.html#CircRecord
 531. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 532. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 533. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 534. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 535. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 536. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 537. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 538. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 539. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 540. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 541. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 542. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 543. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 544. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 545. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 546. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 547. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 548. file://localhost/home/asl2/src/PyZ3950/asn1.html#FormatSpec
 549. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 550. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 551. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 552. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 553. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 554. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 555. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 556. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 557. file://localhost/home/asl2/src/PyZ3950/asn1.html#Variant
 558. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 559. file://localhost/home/asl2/src/PyZ3950/asn1.html#Unit
 560. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 561. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 562. file://localhost/home/asl2/src/PyZ3950/asn1.html#Term
 563. file://localhost/home/asl2/src/PyZ3950/asn1.html#TaggedElement
 564. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 565. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementData
 566. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementMetaData
 567. file://localhost/home/asl2/src/PyZ3950/asn1.html#Variant
 568. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 569. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 570. file://localhost/home/asl2/src/PyZ3950/asn1.html#TaggedElement
 571. file://localhost/home/asl2/src/PyZ3950/asn1.html#Order
 572. file://localhost/home/asl2/src/PyZ3950/asn1.html#Usage
 573. file://localhost/home/asl2/src/PyZ3950/asn1.html#HitVector
 574. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 575. file://localhost/home/asl2/src/PyZ3950/asn1.html#Variant
 576. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 577. file://localhost/home/asl2/src/PyZ3950/asn1.html#TagPath
 578. file://localhost/home/asl2/src/PyZ3950/asn1.html#TagPath
 579. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 580. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 581. file://localhost/home/asl2/src/PyZ3950/asn1.html#Term
 582. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 583. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 584. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 585. file://localhost/home/asl2/src/PyZ3950/asn1.html#Unit
 586. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 587. file://localhost/home/asl2/src/PyZ3950/asn1.html#Permissions
 588. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 589. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 590. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 591. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 592. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 593. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 594. file://localhost/home/asl2/src/PyZ3950/asn1.html#Permissions
 595. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 596. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 597. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 598. file://localhost/home/asl2/src/PyZ3950/asn1.html#Estimate
 599. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 600. file://localhost/home/asl2/src/PyZ3950/asn1.html#EstimateType
 601. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 602. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 603. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 604. file://localhost/home/asl2/src/PyZ3950/asn1.html#Estimate
 605. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 606. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 607. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 608. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 609. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 610. file://localhost/home/asl2/src/PyZ3950/asn1.html#Challenge
 611. file://localhost/home/asl2/src/PyZ3950/asn1.html#Response
 612. file://localhost/home/asl2/src/PyZ3950/asn1.html#PromptId
 613. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 614. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 615. file://localhost/home/asl2/src/PyZ3950/asn1.html#Encryption
 616. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 617. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 618. file://localhost/home/asl2/src/PyZ3950/asn1.html#PromptId
 619. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 620. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 621. file://localhost/home/asl2/src/PyZ3950/asn1.html#Encryption
 622. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 623. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 624. file://localhost/home/asl2/src/PyZ3950/asn1.html#DRNType
 625. file://localhost/home/asl2/src/PyZ3950/asn1.html#DRNType
 626. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 627. file://localhost/home/asl2/src/PyZ3950/asn1.html#KRBRequest
 628. file://localhost/home/asl2/src/PyZ3950/asn1.html#KRBResponse
 629. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 630. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 631. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 632. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 633. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 634. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartNotToKeep
 635. file://localhost/home/asl2/src/PyZ3950/asn1.html#TargetPart
 636. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 637. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 638. file://localhost/home/asl2/src/PyZ3950/asn1.html#Query
 639. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 640. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 641. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartToKeep
 642. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartNotToKeep
 643. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartToKeep
 644. file://localhost/home/asl2/src/PyZ3950/asn1.html#TargetPart
 645. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 646. file://localhost/home/asl2/src/PyZ3950/asn1.html#OtherInformation
 647. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 648. file://localhost/home/asl2/src/PyZ3950/asn1.html#Query
 649. file://localhost/home/asl2/src/PyZ3950/asn1.html#Query
 650. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 651. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 652. file://localhost/home/asl2/src/PyZ3950/asn1.html#ExportSpecification
 653. file://localhost/home/asl2/src/PyZ3950/asn1.html#Destination
 654. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartToKeep
 655. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartNotToKeep
 656. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartToKeep
 657. file://localhost/home/asl2/src/PyZ3950/asn1.html#TargetPart
 658. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 659. file://localhost/home/asl2/src/PyZ3950/asn1.html#Destination
 660. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 661. file://localhost/home/asl2/src/PyZ3950/asn1.html#ExportSpecification
 662. file://localhost/home/asl2/src/PyZ3950/asn1.html#Query
 663. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 664. file://localhost/home/asl2/src/PyZ3950/asn1.html#Period
 665. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 666. file://localhost/home/asl2/src/PyZ3950/asn1.html#Query
 667. file://localhost/home/asl2/src/PyZ3950/asn1.html#Period
 668. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 669. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 670. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 671. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 672. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartToKeep
 673. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartNotToKeep
 674. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartToKeep
 675. file://localhost/home/asl2/src/PyZ3950/asn1.html#TargetPart
 676. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 677. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 678. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 679. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 680. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 681. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 682. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 683. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 684. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 685. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 686. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 687. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartToKeep
 688. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartNotToKeep
 689. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartToKeep
 690. file://localhost/home/asl2/src/PyZ3950/asn1.html#TargetPart
 691. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 692. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 693. file://localhost/home/asl2/src/PyZ3950/asn1.html#SuppliedRecords
 694. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 695. file://localhost/home/asl2/src/PyZ3950/asn1.html#TaskPackageRecordStructure
 696. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 697. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 698. file://localhost/home/asl2/src/PyZ3950/asn1.html#CorrelationInfo
 699. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 700. file://localhost/home/asl2/src/PyZ3950/asn1.html#DiagRec
 701. file://localhost/home/asl2/src/PyZ3950/asn1.html#CorrelationInfo
 702. file://localhost/home/asl2/src/PyZ3950/asn1.html#ExportSpecification
 703. file://localhost/home/asl2/src/PyZ3950/asn1.html#Destination
 704. file://localhost/home/asl2/src/PyZ3950/asn1.html#CompSpec
 705. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 706. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartToKeep
 707. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartToKeep
 708. file://localhost/home/asl2/src/PyZ3950/asn1.html#CompSpec
 709. file://localhost/home/asl2/src/PyZ3950/asn1.html#Destination
 710. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 711. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 712. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 713. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 714. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 715. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 716. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 717. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 718. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 719. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 720. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 721. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 722. file://localhost/home/asl2/src/PyZ3950/asn1.html#ExportSpecification
 723. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartToKeep
 724. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartNotToKeep
 725. file://localhost/home/asl2/src/PyZ3950/asn1.html#OriginPartToKeep
 726. file://localhost/home/asl2/src/PyZ3950/asn1.html#TargetPart
 727. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 728. file://localhost/home/asl2/src/PyZ3950/asn1.html#ExportSpecification
 729. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 730. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 731. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 732. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 733. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 734. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 735. file://localhost/home/asl2/src/PyZ3950/asn1.html#Term
 736. file://localhost/home/asl2/src/PyZ3950/asn1.html#Query
 737. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 738. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 739. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 740. file://localhost/home/asl2/src/PyZ3950/asn1.html#QueryExpression
 741. file://localhost/home/asl2/src/PyZ3950/asn1.html#QueryExpression
 742. file://localhost/home/asl2/src/PyZ3950/asn1.html#QueryExpression
 743. file://localhost/home/asl2/src/PyZ3950/asn1.html#IntUnit
 744. file://localhost/home/asl2/src/PyZ3950/asn1.html#ResultsByDB
 745. file://localhost/home/asl2/src/PyZ3950/asn1.html#DatabaseName
 746. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 747. file://localhost/home/asl2/src/PyZ3950/asn1.html#Term
 748. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 749. file://localhost/home/asl2/src/PyZ3950/asn1.html#Query
 750. file://localhost/home/asl2/src/PyZ3950/asn1.html#Variant
 751. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 752. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 753. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 754. file://localhost/home/asl2/src/PyZ3950/asn1.html#Variant
 755. file://localhost/home/asl2/src/PyZ3950/asn1.html#ElementRequest
 756. file://localhost/home/asl2/src/PyZ3950/asn1.html#SimpleElement
 757. file://localhost/home/asl2/src/PyZ3950/asn1.html#InternationalString
 758. file://localhost/home/asl2/src/PyZ3950/asn1.html#TagPath
 759. file://localhost/home/asl2/src/PyZ3950/asn1.html#Variant
 760. file://localhost/home/asl2/src/PyZ3950/asn1.html#TagPath
 761. file://localhost/home/asl2/src/PyZ3950/asn1.html#Variant
 762. file://localhost/home/asl2/src/PyZ3950/asn1.html#StringOrNumeric
 763. file://localhost/home/asl2/src/PyZ3950/asn1.html#Occurrences
 764. file://localhost/home/asl2/src/PyZ3950/asn1.html#Occurrences
 765. mailto:lcweb@loc.gov
